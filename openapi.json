{
  "openapi": "3.0.0",
  "info": {
    "x-logo": {
      "url": "https://cdn.jump.finance/openapi.png",
      "backgroundColor": ""
    },
    "title": "Jump.Finance OpenApi",
    "version": "2.0",
    "contact": {
      "name": "Jump.Finance",
      "email": "support@jump.finance",
      "url": "https://jump.finance/kontakty"
    },
    "description": "# Введение\n**Jump.Finance OpenApi** — продукт, позволяющий вам организовать взаимодйствие с сервисом Jump.Finance из своей системы.\n\n**Возможности:**\n- управление юрлицами для работы с исполнителями через разные юридические лица и банковские счета\n- управление исполнителями\n- создание выплат и получение информации по выплатам\n- получение информации по банковским счетам\n## Общая информация\nНомер телефона всегда передается в формате '+70000000000'\n\nВ каждом запросе должны быть заголовки:\n- Accept: application/json\n- Content-Type: application/json\n## Авторизация\nДля авторизации необходимо передать ключ клиента. Ключ можно передать двумя способами:\n\n```GET-параметр client_key```\n\n ```заголовок Client-Key```\n## Правовые формы\nВсе исполнители имеют правовую форму **legal_form_id**.\n\nДоступные значения:\n\n\n- 1 - физическое лицо\n\n- 2 - самозанятый\n\n- 3 - ип\n\n## Статусы выплат\nВсе выплаты имеют текущий статус **status_id**.\n\nДоступные значения:\n\n\n- 1 - оплачен (без возможности дальнейших действий)\n\n- 2 - отклонён (без возможности дальнейших действий)\n\n- 3 - в обработке (ждём проведение через платежные системы)\n\n- 4 - ожидает подтверждения (требуется подтверждение выплаты в ЛК)\n\n- 5 - ошибка выплаты (с возможностью повторить действие, отменить выплату или зачислить средства на баланс исполнителя)\n\n## Ошибки\n**401 Unauthorized** - ошибка авторизации\n\n```\n{\n  \"error\": {\n    \"title\": \"Ошибка авторизации\",\n    \"detail\": \"Требуется авторизация\",\n    \"fields\": null,\n    \"code\": 401\n  }\n}\n```\n\n**403 Forbidden** - ошибка доступа\n\n```\n{\n  \"error\": {\n    \"title\": \"Доступ ограничен\",\n    \"detail\": \"This action is unauthorized.\",\n    \"fields\": null,\n    \"code\": 403\n  }\n}\n```\n\n**404 Not Found** - ресурс не найден\n\n```\n{\n  \"error\": {\n    \"title\": \"Ошибка\",\n    \"detail\": \"Ресурс не найден\",\n    \"fields\": null,\n    \"code\": 404\n  }\n}\n```\n\n**422 Unprocessable Entity** - ошибка валидации\n\n```\n{\n  \"error\": {\n    \"title\": \"Ошибка\",\n    \"detail\": \"The given data was invalid.\",\n    \"fields\": [\n      {\n        \"field\": \"name\",\n        \"messages\": [\n          \"Поле Название обязательно для заполнения.\"\n        ]\n      },\n      {\n        \"field\": \"inn\",\n        \"messages\": [\n          \"Поле ИНН обязательно для заполнения.\"\n        ]\n      }\n    ],\n    \"code\": 422\n  }\n\n}\n```\n\n**500 Internal Server Error** - неизвестная ошибка\n\n```\n{\n  \"error\": {\n    \"title\": \"Ошибка\",\n    \"detail\": \"Внутренняя ошибка сервера\",\n    \"fields\": null,\n    \"code\": 500\n  }\n}\n```\n",
    "termsOfService": "https://jump.finance/rules/"
  },
  "x-tagGroups": [
    {
      "name": "Методы:",
      "tags": [
        "Банковские счета",
        "Внутренние балансы",
        "Выплаты",
        "Группы",
        "Интеграции",
        "Исполнители",
        "Самозанятые",
        "Словари",
        "Юрлица",
        "Филиалы",
        "Отделы юрлиц",
        "Должности",
        "Штатные сотрудники",
        "Типы документов",
        "Документы",
        "Акты",
        "Подписи документов",
        "Отпуска",
        "Виды отпусков",
        "Кандидаты",
        "Анкеты кандидатов",
        "Расчетные листы",
        "Шаблоны заявлений",
        "Заявления",
        "Провайдеры подписей",
        "Производственные календари"
      ]
    }
  ],
  "tags": [
    {
      "name": "Банковские счета",
      "description": "Данные методы предназначены для получения банковских счетов компании."
    },
    {
      "name": "Внутренние балансы",
      "description": "Данные методы предназначены для получения внутренних балансов компании."
    },
    {
      "name": "Выплаты",
      "description": "Данные методы предназначены для создания выплат исполнителям."
    },
    {
      "name": "Группы",
      "description": "Данные методы предназначены для получения групп компании."
    },
    {
      "name": "Интеграции",
      "description": "Данные методы предназначены для получения интеграций компании."
    },
    {
      "name": "Исполнители",
      "description": "Данные методы предназначены для получения и создания исполнителей. Исполнители выполняют работы и получают за это оплату."
    },
    {
      "name": "Самозанятые",
      "description": "Данные методы предназначены для получения информации о самозанятых исполнителях."
    },
    {
      "name": "Словари",
      "description": "Список словарей"
    },
    {
      "name": "Юрлица",
      "description": "Данные методы предназначены для получения и создания юрлиц. Как правило, при регистрации в сервисе, первое юрлицо создается автоматически. Если вы работаете через одно юрлицо, достаточно получить его ID и использовать для всех исполнителей."
    },
    {
      "name": "Отделы юрлиц",
      "description": "Данные методы предназначены для получения и создания отделов юрлиц."
    },
    {
      "name": "Должности",
      "description": "Данные методы предназначены для получения и создания должностей."
    },
    {
      "name": "Штатные сотрудники",
      "description": "Данные методы предназначены для управления штатными сотрудниками."
    },
    {
      "name": "Типы документов",
      "description": "Данные методы предназначены для получения и создания типов документов."
    },
    {
      "name": "Документы",
      "description": "Данные методы предназначены для получения и создания документов."
    },
    {
      "name": "Акты",
      "description": "Данные методы предназначены для получения и создания актов."
    },
    {
      "name": "Подписи документов",
      "description": "Данные методы предназначены для подписи документов."
    },
    {
      "name": "Отпуска",
      "description": "Данные методы предназначены для получения и создания отпусков штатных сотрудников."
    },
    {
      "name": "Виды отпусков",
      "description": "Данные методы предназначены для получения и манипулирования видами отпусков."
    },
    {
      "name": "Кандидаты",
      "description": "Данные методы предназначены для получения и манипулирования кандидатами."
    },
    {
      "name": "Анкеты кандидатов",
      "description": "Данные методы предназначены для получения и манипулирования анкетами кандидатов."
    },
    {
      "name": "Расчетные листы",
      "description": ""
    },
    {
      "name": "Шаблоны заявлений",
      "description": "Данные методы предназначены для работы с шаблонами заявлений."
    },
    {
      "name": "Заявления",
      "description": "Данные методы предназначены для работы с заявлениями."
    },
    {
      "name": "Филиалы",
      "description": "Данные методы работают для получения и манипулирования филиалами"
    },
    {
      "name": "Провайдеры подписей",
      "description": "Данные методы предназначены для работы с провайдерами подписей."
    },
    {
      "name": "Производственные календари",
      "description": "Данные методы предназначены для работы с производственными календарями."
    }
  ],
  "servers": [
    {
      "url": "https://api.jump.finance/services/openapi"
    }
  ],
  "security": [
    {
      "ApiKeyHeader": []
    },
    {
      "ApiKeyQuery": []
    }
  ],
  "paths": {
    "/production-calendars": {
      "post": {
        "tags": [
          "Производственные календари"
        ],
        "summary": "Создать производственный календарь",
        "operationId": "create-production-calendar",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1.CreateUpdateProductionCalendarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Календарь успешно создан",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/v1.ProductionCalendar"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/production-calendars/{id}": {
      "put": {
        "tags": [
          "Производственные календари"
        ],
        "summary": "Обновить значения свойств производственного календаря",
        "operationId": "change-production-calendar-properties",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1.CreateUpdateProductionCalendarRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Свойства календаря успешно обновлены",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/v1.ProductionCalendar"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/production-calendars/{id}/sync-dates": {
      "post": {
        "tags": [
          "Производственные календари"
        ],
        "summary": "Синхронизировать календарные дни производственного календаря",
        "description": "Можно передать до 500 дат в одном запросе.",
        "operationId": "sync-production-calendar-dates",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/v1.SyncProductionCalendarDatesRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/agents": {
      "post": {
        "tags": [
          "Юрлица"
        ],
        "summary": "Создание юрлица",
        "description": "Создание  юрлица",
        "operationId": "postAgentsStore",
        "requestBody": {
          "description": "Создает новое юрлицо",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentStoreUpdateRequest"
              },
              "example": {
                "name": "ООО Фаворит",
                "inn": "5406678646",
                "ogrn": "1115476092687",
                "address": "г Новосибирск, ул. Фрунзе, 8",
                "city": "Новосибирск",
                "kpp": "1231231231",
                "ogrn_date": "2022-09-12",
                "management_name": "Директор",
                "management_post": "Иванов Иван Иванович",
                "individual_entrepreneur_surname": "Иванов",
                "individual_entrepreneur_name": "Иван",
                "individual_entrepreneur_patronymic": "Иванович"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Юрлицо создано",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentProfile"
                    }
                  }
                },
                "example": {
                  "item": {
                    "id": 123,
                    "name": "ООО Фаворит",
                    "inn": "5406678646",
                    "ogrn": "1115476092687",
                    "address": "г Новосибирск, ул. Фрунзе, 8",
                    "city": "Новосибирск",
                    "kpp": "1231231231",
                    "ogrn_date": "2022-09-12",
                    "management_name": "Директор",
                    "management_post": "Иванов Иван Иванович",
                    "individual_entrepreneur_surname": "Иванов",
                    "individual_entrepreneur_name": "Иван",
                    "individual_entrepreneur_patronymic": "Иванович",
                    "updated_at": "2021-03-15T11:34:44+03:00"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      },
      "get": {
        "tags": [
          "Юрлица"
        ],
        "summary": "Получить все юрлица",
        "description": "Возвращает список всех юрлиц",
        "operationId": "getAgentsIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Список юрлиц",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AgentProfile"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                },
                "example": {
                  "items": [
                    {
                      "id": 123,
                      "name": "ООО Фаворит",
                      "inn": "5406678646",
                      "ogrn": "1115476092687",
                      "address": "г Новосибирск, ул. Фрунзе, 8",
                      "city": "Новосибирск",
                      "kpp": "1231231231",
                      "ogrn_date": "2022-09-12",
                      "management_name": "Директор",
                      "management_post": "Иванов Иван Иванович",
                      "individual_entrepreneur_surname": "Иванов",
                      "individual_entrepreneur_name": "Иван",
                      "individual_entrepreneur_patronymic": "Иванович",
                      "updated_at": "2021-03-15T11:34:44+03:00"
                    }
                  ],
                  "meta": {
                    "total": 1,
                    "from": 1,
                    "to": 1,
                    "per_page": 20,
                    "current_page": 1,
                    "last_page": 1
                  },
                  "links": {
                    "path": "string",
                    "first_page_url": "string",
                    "last_page_url": "string",
                    "next_page_url": null,
                    "prev_page_url": null
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        }
      }
    },
    "/agents/{agent_id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "agent_id",
          "in": "path",
          "required": true,
          "description": "Id юрлица"
        }
      ],
      "get": {
        "tags": [
          "Юрлица"
        ],
        "summary": "Получить карточку юрлица",
        "description": "Возвращает карточку юрлица",
        "operationId": "getAgentsShow",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "Уникальный идентификатор юрлица",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточка юрлица",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentProfile"
                    }
                  }
                },
                "example": {
                  "item": {
                    "id": 123,
                    "name": "ООО Фаворит",
                    "inn": "5406678646",
                    "ogrn": "1115476092687",
                    "address": "г Новосибирск, ул. Фрунзе, 8",
                    "updated_at": "2021-03-15T11:34:44+03:00"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Юрлица"
        ],
        "summary": "Редактирование юрлица",
        "description": "Обновляет информацию юрлица",
        "operationId": "putAgentsUpdate",
        "requestBody": {
          "description": "Редактирует данные юрлица",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentStoreUpdateRequest"
              },
              "example": {
                "name": "ООО Фаворит",
                "inn": "5406678646",
                "ogrn": "1115476092687",
                "address": "г Новосибирск, ул. Фрунзе, 8",
                "city": "Новосибирск",
                "kpp": "1231231231",
                "ogrn_date": "2022-09-12",
                "management_name": "Директор",
                "management_post": "Иванов Иван Иванович",
                "individual_entrepreneur_surname": "Иванов",
                "individual_entrepreneur_name": "Иван",
                "individual_entrepreneur_patronymic": "Иванович"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновленное юрлицо",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentProfile"
                    }
                  }
                },
                "example": {
                  "item": {
                    "id": 123,
                    "name": "ООО Фаворит",
                    "inn": "5406678646",
                    "ogrn": "1115476092687",
                    "address": "г Новосибирск, ул. Фрунзе, 8",
                    "city": "Новосибирск",
                    "kpp": "1231231231",
                    "ogrn_date": "2022-09-12",
                    "management_name": "Директор",
                    "management_post": "Иванов Иван Иванович",
                    "individual_entrepreneur_surname": "Иванов",
                    "individual_entrepreneur_name": "Иван",
                    "individual_entrepreneur_patronymic": "Иванович",
                    "updated_at": "2021-03-15T11:34:44+03:00"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      },
      "patch": {
        "tags": [
          "Юрлица"
        ],
        "summary": "Редактирование отдельных атрибутов юрлица",
        "description": "Обновляет информацию юрлица",
        "operationId": "patchAgentsUpdate",
        "requestBody": {
          "description": "Редактирует данные юрлица",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentStorePatchRequest"
              },
              "example": {
                "name": "ООО Фаворит",
                "inn": "5406678646",
                "ogrn": "1115476092687",
                "address": "г Новосибирск, ул. Фрунзе, 8",
                "city": "Новосибирск",
                "kpp": "1231231231",
                "ogrn_date": "2022-09-12",
                "management_name": "Директор",
                "management_post": "Иванов Иван Иванович",
                "individual_entrepreneur_surname": "Иванов",
                "individual_entrepreneur_name": "Иван",
                "individual_entrepreneur_patronymic": "Иванович"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновленное юрлицо",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentProfile"
                    }
                  }
                },
                "example": {
                  "item": {
                    "id": 123,
                    "name": "ООО Фаворит",
                    "inn": "5406678646",
                    "ogrn": "1115476092687",
                    "address": "г Новосибирск, ул. Фрунзе, 8",
                    "city": "Новосибирск",
                    "kpp": "1231231231",
                    "ogrn_date": "2022-09-12",
                    "management_name": "Директор",
                    "management_post": "Иванов Иван Иванович",
                    "individual_entrepreneur_surname": "Иванов",
                    "individual_entrepreneur_name": "Иван",
                    "individual_entrepreneur_patronymic": "Иванович",
                    "updated_at": "2021-03-15T11:34:44+03:00"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Юрлица"
        ],
        "summary": "Удаление юрлица",
        "description": "Удаляет юрлицо",
        "operationId": "deleteAgentsItem",
        "responses": {
          "204": {
            "description": "Юрлицо удачно удалено"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/branch-office": {
      "get": {
        "tags": [
          "Филиалы"
        ],
        "summary": "Получение списка филиалов",
        "description": "Получение списка филиалов",
        "operationId": "getBranchOffices",
        "parameters": [
          {
            "name": "agent_id",
            "in": "path",
            "description": "Уникальный идентификатор Юр. лица",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Список филиалов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BranchOfficeItem"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/branch-office/{branch_office_id}": {
      "patch": {
        "tags": [
          "Филиалы"
        ],
        "summary": "Редактирование филиала",
        "description": "Редактирование филиала",
        "operationId": "editBranchOffice",
        "requestBody": {
          "description": "Редактирует существующий филиал",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchOfficeEditRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Филиал",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/BranchOfficeItem"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/contractors": {
      "post": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Создать/изменить исполнителя",
        "description": "Исполнитель ищется по номеру телефона. Если исполнителя еще нет в системе, он будет создан. При наличии исполнителя, он будет обновлен. Номер телефона является уникальным в системе и однозначно идентифицирует каждого исполнителя.\n",
        "operationId": "postContractorsStore",
        "requestBody": {
          "description": "Создает нового или обновляет существуещего исполнителя",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorStoreRequest"
              },
              "example": {
                "phone": "+79031112233",
                "last_name": "Константинопольский",
                "first_name": "Константин",
                "middle_name": "Константинович",
                "legal_form_id": 2,
                "inn": "1234567892",
                "agent_id": 1,
                "group_id": 1,
                "company_agrees_pay_taxes": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Исполнитель",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/ContractorProfile"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      },
      "get": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Получить всех исполнителей",
        "description": "Список всех истоплнителей с пагинацией",
        "operationId": "getContractorsIndex",
        "responses": {
          "200": {
            "description": "Список исполнителей",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContractorProfile"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                },
                "example": {
                  "items": [
                    {
                      "id": 1,
                      "phone": "+79031112233",
                      "last_name": "Константинопольский",
                      "first_name": "Константин",
                      "middle_name": "Константинович",
                      "legal_form_id": 1,
                      "inn": "1234567892",
                      "agent_id": 1,
                      "balance": {
                        "value": 120.34,
                        "currency": {
                          "code": "RUB",
                          "symbol": "&#8381;",
                          "title": "Российский рубль",
                          "unicode": "\\u20BD"
                        }
                      },
                      "agent": {
                        "id": 1,
                        "name": "seamless grow ROI"
                      },
                      "legal_form": {
                        "id": 1,
                        "title": "Физическое лицо",
                        "is_self_employed": false
                      },
                      "is_editable": true,
                      "created_at": "2021-03-12T14:06:47+03:00",
                      "updated_at": "2021-03-12T14:06:47+03:00"
                    }
                  ],
                  "meta": {
                    "total": 1,
                    "from": 1,
                    "to": 1,
                    "per_page": 20,
                    "current_page": 1,
                    "last_page": 1
                  },
                  "links": {
                    "path": "string",
                    "first_page_url": "string",
                    "last_page_url": "string",
                    "next_page_url": null,
                    "prev_page_url": null
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ]
      }
    },
    "/contractors/{contractor_id}": {
      "get": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Получить карточку исполнителя",
        "description": "Возвращает карточку исполнителя",
        "operationId": "getContractorsShow",
        "parameters": [
          {
            "name": "contractor_id",
            "in": "path",
            "description": "Уникальный идентификатор исполнителя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточка исполнителя",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/ContractorProfile"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "item": {
                        "id": 0,
                        "phone": "string",
                        "email": "string",
                        "last_name": "string",
                        "first_name": "string",
                        "middle_name": "string",
                        "inn": "string",
                        "is_editable": true,
                        "updated_at": "string",
                        "created_at": "string",
                        "balance": {
                          "value": 0,
                          "currency": {
                            "code": "RUB",
                            "symbol": "&#8381;",
                            "title": "Российский рубль",
                            "unicode": "\\u20BD"
                          }
                        },
                        "agent": {
                          "id": 123,
                          "name": "ООО Фаворит"
                        },
                        "legal_form": {
                          "id": 1,
                          "title": "Физическое лицо",
                          "is_self_employed": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Удалить исполнителя",
        "description": "Удаляет исполнителя",
        "operationId": "deleteContractorsDestroy",
        "parameters": [
          {
            "name": "contractor_id",
            "in": "path",
            "description": "Уникальный идентификатор исполнителя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Исполнитель успешно удален"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Исполнители"
        ],
        "description": "Обновление исполнителя",
        "summary": "Обновление исполнителя",
        "operationId": "contractorUpdate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContractorStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractorProfile"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/400BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/contractors/{contractor_id}/requisites": {
      "get": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Получить реквизиты исполнителя",
        "description": "Возвращает реквизиты исполнителя",
        "operationId": "getContractorRequisitesShow",
        "parameters": [
          {
            "name": "contractor_id",
            "in": "path",
            "description": "Уникальный идентификатор исполнителя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Массив реквизитов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ContractorRequisites"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "items": [
                        {
                          "id": 0,
                          "display_name": "Название реквизитов",
                          "description": "Мир · 1519",
                          "type": {
                            "id": 8,
                            "slug": "bank_card",
                            "title": "Карта банка по номеру карты"
                          },
                          "icon": {
                            "normal": "https://cdn.jump.finance/image/b/bc/bce1aa6fd5358ee8ad2213f4719bfe9567d0a81e.png",
                            "url": "https://cdn.jump.finance/image/b/bc/bce1aa6fd5358ee8ad2213f4719bfe9567d0a81e.png",
                            "overlay": true
                          },
                          "is_available": true,
                          "is_default": true,
                          "requisite": {
                            "bank_name": null,
                            "account_number": "2202201080431519",
                            "payment_text": null,
                            "bik": null,
                            "sbp_bank_id": null,
                            "inn": null,
                            "last_name": "string",
                            "first_name": "string",
                            "middle_name": "string"
                          },
                          "created_at": "string"
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "from": 1,
                        "to": 1,
                        "per_page": 20,
                        "current_page": 1,
                        "last_page": 1
                      },
                      "links": {
                        "path": "string",
                        "first_page_url": "string",
                        "last_page_url": "string",
                        "next_page_url": null,
                        "prev_page_url": null
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      },
      "parameters": [
        {
          "name": "contractor_id",
          "in": "path",
          "description": "Уникальный идентификатор исполнителя",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/contractors/{contractor_id}/balances": {
      "parameters": [
        {
          "name": "contractor_id",
          "in": "path",
          "description": "Уникальный идентификатор исполнителя",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Получить балансы исполнителя",
        "description": "Возвращает балансы исполнителя",
        "operationId": "getContractorBalancesIndex",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Дополнительно к существующим полям можно запросить дополнительную информацию по балансу. Пример: include=agent\n\n- **agent** - юрлицо баланса\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Список балансов исполнителя",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CardBalance"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        }
      }
    },
    "/contractors/{contractor_id}/balances/{balance_id}": {
      "parameters": [
        {
          "name": "contractor_id",
          "in": "path",
          "description": "Уникальный идентификатор исполнителя",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        },
        {
          "name": "balance_id",
          "in": "path",
          "description": "Уникальный идентификатор баланса",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Получить баланс исполнителя",
        "description": "Возвращает баланс исполнителя",
        "operationId": "getContractorBalancesShow",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Дополнительно к существующим полям можно запросить дополнительную информацию по балансу. Пример: include=agent\n\n- **agent** - юрлицо баланса\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточка баланса исполнителя",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/CardBalance"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        }
      }
    },
    "/contractors/{contractor_id}/selfemployer": {
      "parameters": [
        {
          "name": "contractor_id",
          "in": "path",
          "description": "Уникальный идентификатор исполнителя",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": [
          "Исполнители",
          "Самозанятые"
        ],
        "summary": "Получить информацию о самозанятом",
        "operationId": "getContractorSelfemployerShow",
        "responses": {
          "200": {
            "description": "Карточка самозанятого исполнителя",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Selfemployer"
                    },
                    "": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        },
        "description": "Не делает запрос в налоговую, возвращает текущее состояние самозанятого. "
      }
    },
    "/contractors/{contractor_id}/selfemployer/sync": {
      "parameters": [
        {
          "name": "contractor_id",
          "in": "path",
          "description": "Уникальный идентификатор исполнителя",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "post": {
        "tags": [
          "Исполнители",
          "Самозанятые"
        ],
        "summary": "Проверить статус самозанятого",
        "operationId": "postContractorSelfemployerSync",
        "responses": {
          "200": {
            "description": "Карточка самозанятого исполнителя",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Selfemployer"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "item": {
                        "inn": "960215602664",
                        "is_can_pay_taxes": false,
                        "is_verified": true,
                        "has_company_agrees_pay_taxes": true,
                        "has_warning": true,
                        "sync": {
                          "in_process": false
                        },
                        "messages": {
                          "status": {
                            "type": "error",
                            "short_title": "Требуется разрешение",
                            "detail": "Исполнитель должен подтвердить разрешение на уплату налогов в личном кабинете налогоплательщика или мобильном приложение «Мой налог» в разделе «Партнёры»."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "description": "Отправляет запрос в налоговую для того чтобы проверить, подтвердил ли самозанятый необходимые разрешения. Возвращает ту же модель, что и метод **GET /contractors/{contractor_id}/selfemployer/**\nПосле этого запроса можно запустить опрос метода GET по таймауту (например каждые 2 сек), до тех пор, пока в ответе **sync.in_process === true**\nДанный метод защищен от многократного запуска. Для одного исполнителя можно запрашивать метод **POST** не чаще чем один раз в 30 сек."
      }
    },
    "/contractors/{contractor_id}/identification-requests": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "name": "contractor_id",
            "in": "path",
            "required": true,
            "description": "Идентификатор исполнителя"
          },
          {
            "$ref": "#/components/parameters/identification_request_view"
          }
        ],
        "tags": [
          "Исполнители"
        ],
        "summary": "Принудительно идентифицировать исполнителя",
        "operationId": "postContractorIdentificationRequest",
        "requestBody": {
          "description": "Принудительно идентифицирует исполнителя",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContractorIdentificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/IdentificationRequestSimpleView"
                        },
                        {
                          "$ref": "#/components/schemas/IdentificationRequestPassportView"
                        }
                      ]
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/contractors/{contractor_id}/identification-requests/last-approved": {
      "get": {
        "tags": [
          "Исполнители"
        ],
        "summary": "Получить информацию о последнем одобренном запросе на идентификацию",
        "operationId": "get-last-approved-identification-request-for-contractor",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "anyOf": [
                        {
                          "$ref": "#/components/schemas/IdentificationRequestSimpleView"
                        },
                        {
                          "$ref": "#/components/schemas/IdentificationRequestPassportView"
                        }
                      ]
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "description": "Возвращает информацию о последнем одобренном запросе на идентификацию",
        "parameters": [
          {
            "$ref": "#/components/parameters/identification_request_view"
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "contractor_id",
          "in": "path",
          "required": true,
          "description": "Идентификатор исполнителя"
        }
      ]
    },
    "/vacations/workplaces/import": {
      "post": {
        "tags": [
          "Отпуска"
        ],
        "summary": "Импорт кол-ва оставшихся дней отпуска у указанных сотрудников в указанных юр. лицах",
        "operationId": "postVacationsWorkplacesImport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "type": "integer",
                          "description": "Идентификатор юр. лица"
                        },
                        "employee_id": {
                          "type": "integer",
                          "description": "Идентификатор сотрудника"
                        },
                        "remaining_vacation_days": {
                          "type": "number",
                          "format": "float",
                          "description": "Кол-во оставшихся дней отпуска сотрудника"
                        }
                      },
                      "required": [
                        "agent_id",
                        "employee_id",
                        "remaining_vacation_days"
                      ]
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Данные приняты"
          }
        },
        "description": ""
      }
    },
    "/vacation-kinds": {
      "get": {
        "tags": [
          "Виды отпусков"
        ],
        "summary": "Получить список видов отпусков",
        "operationId": "getVacationKinds",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VacationKind"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Виды отпусков"
        ],
        "summary": "Добавить вид отпуска",
        "operationId": "addVacationKind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название вида отпуска"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/VacationKind"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/vacation-kinds/{vacation_kind_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "vacation_kind_id",
          "in": "path",
          "required": true,
          "description": "ИД вида отпуска"
        }
      ],
      "get": {
        "summary": "Получить вид отпуска",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/VacationKind"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "getVacationKind",
        "tags": [
          "Виды отпусков"
        ]
      },
      "patch": {
        "summary": "Отредактировать вид отпуска",
        "operationId": "editVacationKind",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/VacationKind"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название вида отпуска"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Виды отпусков"
        ]
      },
      "delete": {
        "summary": "Удалить вид отпуска",
        "operationId": "deleteVacationKind",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "499": {
            "description": "Нельзя удалить этот вид отпуска, поскольку существуют связанные с ним отпуска",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Удаляет вид отпуска",
        "tags": [
          "Виды отпусков"
        ]
      }
    },
    "/vacations/sync": {
      "post": {
        "tags": [
          "Отпуска"
        ],
        "summary": "Синхронизировать отпуска штатных сотрудников компании",
        "description": "Метод позволяет передать график отпусков штатных сотрудников компании из внешней системы. Отсутствующие в сервисе отпуска будут добавлены, а присутствующие в сервисе, но отсутствующие в запросе – удалены из сервиса. Период синхронизации будет ограничен годом, указанным в запросе, поэтому следует присылать только отпуска за указанный год. В запросе нужно передавать не более 100 штатных сотрудников.",
        "operationId": "syncVacations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VacationsSyncRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Данные для синхронизации успешно приняты"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/vacations": {
      "get": {
        "tags": [
          "Отпуска"
        ],
        "summary": "Получить список отпусков",
        "operationId": "getVacationList",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/vacation_include"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "date_from",
                "-date_from",
                "created_at",
                "-created_at"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "Порядок сортировки"
          },
          {
            "name": "employee_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "1,2,5",
            "description": "ИД штатных сотрудников, отпусками которых нужно ограничить выборку, указанные через запятую"
          },
          {
            "schema": {
              "type": "string",
              "example": "1,2,3"
            },
            "in": "query",
            "name": "agent_id",
            "description": "ИД юр.лиц, отпусками которых нужно ограничить выборку, указанные через запятую"
          },
          {
            "schema": {
              "type": "string",
              "example": "1,2,3"
            },
            "in": "query",
            "name": "department_id",
            "description": "ИД отделов, отпусками которых нужно ограничить выборку, указанные через запятую"
          },
          {
            "schema": {
              "type": "string",
              "example": "1,2,3"
            },
            "in": "query",
            "name": "position_id",
            "description": "ИД должностей, отпусками которых нужно ограничить выборку, указанные через запятую"
          },
          {
            "schema": {
              "type": "string",
              "example": "1,2,3"
            },
            "in": "query",
            "name": "vacation_kind_id",
            "description": "ИД типов отпусков, отпусками которых нужно ограничить выборку, указанные через запятую"
          },
          {
            "schema": {
              "type": "boolean",
              "example": "1"
            },
            "in": "query",
            "name": "is_mapped_out",
            "description": "Ограничить выборку только намеченными отпусками"
          },
          {
            "schema": {
              "type": "boolean",
              "example": "1"
            },
            "in": "query",
            "name": "is_scheduled",
            "description": "Ограничить выборку только запланированными отпусками"
          },
          {
            "schema": {
              "type": "boolean",
              "example": "1"
            },
            "in": "query",
            "name": "is_confirmed",
            "description": "Ограничить выборку только подтвержденными отпусками"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date_from",
            "description": "Дата начала периода, за который запрашиваются отпуска"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date_to",
            "description": "Дата окончания периода, за который запрашиваются отпуска"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date_from_min",
            "description": "Минимальная дата начала отпуска"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "date_from_max",
            "description": "Максимальная дата начала отпуска"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vacation"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/vacations/{vacation_id}": {
      "get": {
        "tags": [
          "Отпуска"
        ],
        "summary": "Получить данные отпуска",
        "operationId": "getVacation",
        "parameters": [
          {
            "$ref": "#/components/parameters/vacation_include"
          },
          {
            "name": "vacation_id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Vacation"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/candidates": {
      "post": {
        "summary": "Создать кандидата",
        "operationId": "createCandidate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "description": "Имя",
                    "maxLength": 200
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Фамилия",
                    "maxLength": 200
                  },
                  "middle_name": {
                    "type": "string",
                    "description": "Отчество",
                    "maxLength": 200
                  },
                  "phone": {
                    "type": "string",
                    "description": "Номер телефона"
                  },
                  "email": {
                    "type": "string",
                    "description": "E-mail",
                    "maxLength": 200
                  },
                  "workplaces": {
                    "type": "array",
                    "description": "Список мест работы (максимум одно)",
                    "minLength": 1,
                    "maxLength": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "type": "integer",
                          "description": "ИД юр.лица"
                        },
                        "department_id": {
                          "type": "integer",
                          "description": "ИД отдела"
                        },
                        "position_id": {
                          "type": "integer",
                          "description": "ИД должности"
                        },
                        "employment_date": {
                          "type": "string",
                          "description": "Дата выхода на работу",
                          "format": "date-time"
                        }
                      },
                      "required": [
                        "agent_id",
                        "department_id",
                        "position_id",
                        "employment_date"
                      ]
                    }
                  },
                  "creator_email": {
                    "type": "string",
                    "description": "E-mail сотрудника создавшего кандидата (на него будут приходить уведомления)",
                    "maxLength": 255
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "phone",
                  "email",
                  "workplaces"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/candidate_include"
          }
        ],
        "description": "Создаёт нового кандидата",
        "tags": [
          "Кандидаты"
        ]
      },
      "get": {
        "tags": [
          "Кандидаты"
        ],
        "summary": "Получить список кандидатов",
        "operationId": "getCandidateList",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/candidate_include"
          },
          {
            "name": "agent_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "1,2,5",
            "description": "ИД юридических лиц, указанные через запятую"
          },
          {
            "name": "department_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "1,2,5",
            "description": "ИД отделов, указанные через запятую"
          },
          {
            "name": "position_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "1,2,5",
            "description": "ИД должностей, указанные через запятую"
          },
          {
            "name": "employee_id",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "1,2,5",
            "description": "ИД штатных сотрудников, указанные через запятую"
          },
          {
            "name": "employed",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "example": 1,
            "description": "Был ли трудоустроен сотрудник"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Candidate"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/candidates/{candidate_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "candidate_id",
          "in": "path",
          "required": true,
          "description": "ИД кандидата"
        },
        {
          "$ref": "#/components/parameters/candidate_include"
        }
      ],
      "get": {
        "summary": "Получить данные кандидата",
        "operationId": "getCandidate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "description": "Получает данные кандидата",
        "tags": [
          "Кандидаты"
        ]
      },
      "put": {
        "summary": "Обновить персональные данные кандидата",
        "operationId": "updateCandidatePersonalData",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Обновляет персональные данные кандидата",
        "parameters": [
          {
            "$ref": "#/components/parameters/candidate_include"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "description": "Имя",
                    "maxLength": 200
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Фамилия",
                    "maxLength": 200
                  },
                  "middle_name": {
                    "type": "string",
                    "description": "Отчество",
                    "nullable": true,
                    "maxLength": 200
                  },
                  "phone": {
                    "type": "string",
                    "description": "Номер телефона"
                  },
                  "email": {
                    "type": "string",
                    "description": "E-mail",
                    "maxLength": 200
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "middle_name",
                  "phone",
                  "email"
                ]
              }
            }
          }
        },
        "tags": [
          "Кандидаты"
        ]
      }
    },
    "/candidates/{candidate_id}/complete-employment": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "candidate_id",
          "in": "path",
          "required": true,
          "description": "ИД кандидата"
        },
        {
          "$ref": "#/components/parameters/candidate_include"
        }
      ],
      "put": {
        "summary": "Завершить трудоустройство кандидата",
        "operationId": "completeCandidateEmployment",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Candidate"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "description": "Завершает трудоустройство кандидата",
        "tags": [
          "Кандидаты"
        ]
      }
    },
    "/questionnaire-documents": {
      "get": {
        "summary": "Получить список типов документов для анкеты кандидата",
        "tags": [
          "Анкеты кандидатов"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "Список типов документов",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "Код типа документа"
                          },
                          "title": {
                            "type": "string",
                            "description": "Название типа документа"
                          }
                        },
                        "required": [
                          "code",
                          "title"
                        ]
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        },
        "operationId": "getQuestionnaireDocuments",
        "description": "Возвращает список типов документов для анкеты кандидата"
      }
    },
    "/questionnaires": {
      "post": {
        "summary": "Создать анкету кандидата",
        "operationId": "createCandidateQuestionnaire",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Questionnaire"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Создаёт анкету для кандидата",
        "parameters": [
          {
            "$ref": "#/components/parameters/questionnaire_include"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "candidate_id": {
                    "type": "string",
                    "description": "ИД кандидата"
                  },
                  "requested_document_codes": {
                    "type": "array",
                    "description": "Выбранные коды типов документов",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "candidate_id",
                  "requested_document_codes"
                ]
              }
            }
          }
        },
        "tags": [
          "Анкеты кандидатов"
        ]
      }
    },
    "/payments": {
      "post": {
        "tags": [
          "Выплаты"
        ],
        "summary": "Создать выплату",
        "operationId": "postPaymentsStore",
        "description": "По умолчанию мы создаем выплату от юрлица, которому принадлежит исполнитель. Вы можете переопределить это поведение, явно передав идентификатор юрлица в параметре agent_id. Для компаний, поддерживающих работу с несколькими балансами исполнителей, если передан balance_id, то выплата будет создана на юрлицо переданного баланса, и переопредилить юрлицо у выплаты будет нельзя. Зачисление денежных средств осуществляется только на банковские карты, выпущенные в РФ. Если не передать ни requisite_id, ни requisite, то при создании выплаты будет использоваться реквизит исполнителя по умолчанию. Результат запроса на выплату можно получить, вызвав метод <a href=\"#operation/getPaymentsShow\">Получить информацию по выплате</a>, передав в него соответствующий payment_id\n",
        "requestBody": {
          "description": "Создает новую выплату",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentStoreRequest"
              },
              "examples": {
                "Карта банка по номеру карты": {
                  "value": {
                    "requisite": {
                      "type_id": 8,
                      "account_number": "5469550053219652"
                    },
                    "contractor_id": 123,
                    "amount": 100,
                    "agent_id": 61,
                    "service_name": "наименование услуг (только для самозанятых исполнителей)",
                    "payment_purpose": "назначение платежа",
                    "customer_payment_id": "9f0bb7b7-e5cd-4725-8080-4c230ec702ad"
                  }
                },
                "Карта банка по номеру телефона": {
                  "value": {
                    "requisite": {
                      "type_id": 10,
                      "account_number": "+79031112233",
                      "sbp_bank_id": 100000000004
                    },
                    "contractor_id": 123,
                    "amount": 100,
                    "agent_id": 61,
                    "balance_id": 1,
                    "customer_payment_id": "9f0bb7b7-e5cd-4725-8080-4c230ec702ad"
                  }
                },
                "Существующий реквизит": {
                  "value": {
                    "contractor_id": 123,
                    "amount": 100,
                    "agent_id": 61,
                    "requisite_id": 234,
                    "customer_payment_id": "9f0bb7b7-e5cd-4725-8080-4c230ec702ad"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Создание выплаты",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      },
      "get": {
        "tags": [
          "Выплаты"
        ],
        "summary": "Получить все выплаты",
        "description": "Возвращает все выплаты",
        "operationId": "getPaymentsIndex",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Дополнительно к существующим полям можно запросить дополнительную информацию по выплате. Поля передаются через запятую: include=requisite,creator\n\n- **abilities** - возможность совершения действий над выплатой\n- **requisite** - реквизиты, по которым выплата была произведена\n- **creator** - создатель выплаты\n- **agent** - юрлицо, в рамках которого выплата осуществлена\n- **history** - история действий по выплате\n- **payload** - дополнительные клиентские данные о выплате, например данные, введенные на форме при создании: тип договора, его номер и т.д.\n- **act** - информация о связанном с выплатой акте (если есть)\n- **nominal_info** - информация, связанная с номинальным счетом\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Получение всех выплат",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Payment"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        }
      }
    },
    "/payments/{payment_id}/repeat": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "payment_id",
          "in": "path",
          "required": true,
          "description": "Id выплаты для повтора"
        }
      ],
      "post": {
        "tags": [
          "Выплаты"
        ],
        "description": "Повтор выплаты. \n\nЧтобы узнать, можно ли повторить выплату, выполните запрос на получение выплаты/списка выплат с параметром ?include=abilities. За возможность повторения выплаты отвечает свойство **abilities.can_repeat**.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/payments/{payment_id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "payment_id",
          "in": "path",
          "required": true,
          "description": "Id выплаты, по которой запрашивается информация"
        }
      ],
      "get": {
        "tags": [
          "Выплаты"
        ],
        "summary": "Получить информацию по выплате",
        "operationId": "getPaymentsShow",
        "description": "Статус выплаты имеет смысл запрашивать с периодичностью не чаще одного раза в минуту до получения флага is_final.\n",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "act,branch_office"
            },
            "description": "Дополнительно к существующим полям можно запросить дополнительную информацию по выплате. Поля передаются через запятую: include=requisite,creator\n\n- **abilities** - возможность совершения действий над выплатой\n- **requisite** - реквизиты, по которым выплата была произведена\n- **creator** - создатель выплаты\n- **agent** - юрлицо, в рамках которого выплата осуществлена\n- **history** - история действий по выплате\n- **payload** - дополнительные клиентские данные о выплате, например данные, введенные на форме при создании: тип договора, его номер и т.д.\n- **act** - информация о связанном с выплатой акте (если есть)\n- **branch_office** - информация с какого филиала была сделана выплата (если есть)\n- **nominal_info** - информация, связанная с номинальным счетом\n- **bank_account** - информация с какого счета была сделана выплата\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Получение информации по выплате",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/payments/customer-payment/{customer_payment_id}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "customer_payment_id",
          "in": "path",
          "required": true,
          "description": "Идентификатор выплаты в системе клиента. Значение должно быть в URL-encoded формате, так как некоторые символы могут быть неправильно интерпретированы на принимающей стороне."
        }
      ],
      "get": {
        "tags": [
          "Выплаты"
        ],
        "summary": "Получить информацию по выплате по идентификатору в системе клиента",
        "operationId": "getPaymentsByCustomerPaymentIdShow",
        "description": "Статус выплаты имеет смысл запрашивать с периодичностью не чаще одного раза в минуту до получения флага is_final.\n",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "act,branch_office"
            },
            "description": "Дополнительно к существующим полям можно запросить дополнительную информацию по выплате. Поля передаются через запятую: include=requisite,creator\n\n- **abilities** - возможность совершения действий над выплатой\n- **requisite** - реквизиты, по которым выплата была произведена\n- **creator** - создатель выплаты\n- **agent** - юрлицо, в рамках которого выплата осуществлена\n- **history** - история действий по выплате\n- **payload** - дополнительные клиентские данные о выплате, например данные, введенные на форме при создании: тип договора, его номер и т.д.\n- **act** - информация о связанном с выплатой акте (если есть)\n- **branch_office** - информация с какого филиала была сделана выплата (если есть)\n- **nominal_info** - информация, связанная с номинальным счетом\n- **bank_account** - информация с какого счета была сделана выплата\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Получение информации по выплате",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Payment"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/banks_accounts": {
      "get": {
        "tags": [
          "Банковские счета"
        ],
        "summary": "Получить все банковские счета",
        "operationId": "getBankAccountsIndex",
        "description": "Баланс банковских счетов обновляется в системе каждые 30 минут и при открытии страниц личного кабинета с отображением баланса, но не чаще одного раза в три минуты. Для принудительного обновления используйте метод \"Запросить обновление балансов всех банковских счетов\"",
        "parameters": [
          {
            "name": "view",
            "in": "query",
            "description": "Передайте значение 'simple' для получения необходимой информации",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Получение всех банковских счетов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BankAccount"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        }
      },
      "parameters": []
    },
    "/banks_accounts/{bank_account_id}": {
      "parameters": [
        {
          "name": "bank_account_id",
          "description": "Уникальный идентификатор счета",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Банковские счета"
        ],
        "summary": "Получить информацию по банковскому счёту",
        "operationId": "getBankAccountsShow",
        "description": "Получение информации по определенному счёту\n",
        "responses": {
          "200": {
            "description": "Получение информации по счёту",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/BankAccount"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/banks_accounts/sync_balances": {
      "parameters": [],
      "post": {
        "tags": [
          "Банковские счета"
        ],
        "summary": "Запросить обновление балансов всех банковских счетов",
        "operationId": "updateBankAccountsBalance",
        "description": "Запрашивает обновление балансов всех банковских счетов. Команду возможно запускать не чаще одного раза в три минуты.\n",
        "responses": {
          "202": {
            "description": "Получение информации по запросу обновления",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/BankAccountSyncBalance"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/banks_accounts/sync_balances_status/{sync_balances_status_id}": {
      "parameters": [
        {
          "name": "sync_balances_status_id",
          "description": "Идентификатор запроса на синхронизацию",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": [
          "Банковские счета"
        ],
        "summary": "Получить информацию по запросу обновления банковских счетов",
        "operationId": "getBankAccountsUpdate",
        "description": "Получение информации по запросу обновления банковских счетов\n",
        "responses": {
          "202": {
            "description": "Обновление баланса счёта в процессе",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "302": {
            "description": "Обновление баланса счёта завершено",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "Получить все группы",
        "tags": [
          "Группы"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Group"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        },
        "operationId": "getGroupsIndex",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "view",
            "description": "Передайте значение 'simple' для получения необходимой информации"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "description": "У компании может быть только одна группа по умолчанию"
      }
    },
    "/integrations": {
      "get": {
        "summary": "Получить все интеграции компании",
        "description": "Возвращает все интеграции компании",
        "tags": [
          "Интеграции"
        ],
        "operationId": "getIntegrationsIndex",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Integration"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ]
      }
    },
    "/balances": {
      "get": {
        "summary": "Получить все внутренние балансы компании",
        "description": "Возвращает все внутренние балансы компании",
        "tags": [
          "Внутренние балансы"
        ],
        "operationId": "getBalancesIndex",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomerBalance"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ]
      }
    },
    "/acts/templates": {
      "get": {
        "tags": [
          "Акты"
        ],
        "summary": "Получить список шаблонов актов",
        "description": "Возвращает список шаблонов актов",
        "operationId": "getActTemplatesIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Template"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/dictionaries": {
      "get": {
        "summary": "Словари",
        "tags": [
          "Выплаты",
          "Словари"
        ],
        "operationId": "get-dictionaries",
        "description": "Возвращает список словарей",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sbp_banks": {
                      "$ref": "#/components/schemas/DictionaryItem"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "sbp_banks": {
                        "name": "sbp_banks",
                        "title": "Банки для системы быстрых платежей",
                        "options": [
                          {
                            "value": 100000000004,
                            "title": "Тинькофф Банк"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/document-types": {
      "get": {
        "summary": "Получить все типы документов",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DocumentType"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "operationId": "getDocumentTypesIndex",
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Фильтр по названию типа документа"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "with_trashed",
            "description": "Включить в выборку удаленные записи"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "only_trashed",
            "description": "Делать выборку только из удаленных записей"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "Сортировка записей"
          }
        ],
        "description": "Возвращает список типов документов",
        "tags": [
          "Типы документов"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Создать тип документа",
        "operationId": "postDocumentTypesStore",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/DocumentType"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Создаёт тип документа",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название типа документа"
                  },
                  "document_series": {
                    "type": "string",
                    "description": "Название серии документов этого типа. Используется при генерации номеров документов",
                    "maxLength": 15,
                    "nullable": true
                  },
                  "document_code": {
                    "type": "string",
                    "description": "Код документа этого типа",
                    "maxLength": 10
                  },
                  "is_cancellable": {
                    "type": "boolean",
                    "description": "Можно ли аннулировать документы этого типа",
                    "default": false
                  }
                },
                "required": [
                  "name",
                  "document_code"
                ]
              }
            }
          }
        },
        "tags": [
          "Типы документов"
        ]
      }
    },
    "/document-types/{document_type_id}": {
      "get": {
        "summary": "Получить тип документа",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/DocumentType"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "getDocumentTypesShow",
        "parameters": [],
        "description": "Возвращает тип документа",
        "tags": [
          "Типы документов"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "document_type_id",
          "in": "path",
          "required": true,
          "description": "ИД типа документа"
        }
      ],
      "put": {
        "summary": "Редактирование типа документа",
        "operationId": "putDocumentTypesUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/DocumentType"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Обновляет информацию типа документа",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название типа документа"
                  },
                  "document_series": {
                    "type": "string",
                    "description": "Название серии документов этого типа. Используется при генерации номеров документов",
                    "maxLength": 15,
                    "nullable": true
                  },
                  "document_code": {
                    "type": "string",
                    "description": "Код документа этого типа",
                    "maxLength": 10
                  },
                  "is_cancellable": {
                    "type": "boolean",
                    "description": "Можно ли аннулировать документы этого типа",
                    "default": false
                  }
                },
                "required": [
                  "name",
                  "document_code"
                ]
              }
            }
          }
        },
        "tags": [
          "Типы документов"
        ]
      },
      "delete": {
        "summary": "Удаление типа документа",
        "operationId": "deleteDocumentTypesItem",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "499": {
            "description": "Невозможно удалить тип документа так как существуют документы этого типа.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "description": "Удаляет тип документа",
        "tags": [
          "Типы документов"
        ]
      }
    },
    "/departments": {
      "get": {
        "summary": "Получить все отделы юрлиц",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Department"
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "operationId": "getDepartmentsIndex",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Фильтр по названию отдела"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "with_trashed",
            "description": "Включить в выборку удаленные записи"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "only_trashed",
            "description": "Делать выборку только из удаленных записей"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "parent_id",
                "-parent_id"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "Сортировка записей"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "agent_id",
            "description": "Фильтр по юрлицу"
          }
        ],
        "description": "Возвращает список отделов юрлиц",
        "tags": [
          "Отделы юрлиц"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Создать отдел юрлица",
        "operationId": "postDepartmentsStore",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Department"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Создаёт отдел юрлица",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название отдела юрлица"
                  },
                  "agent_id": {
                    "type": "integer",
                    "description": "ИД юрлица"
                  },
                  "parent_id": {
                    "type": "integer",
                    "description": "ИД родительского отдела юрлица",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "agent_id"
                ]
              }
            }
          }
        },
        "tags": [
          "Отделы юрлиц"
        ]
      }
    },
    "/departments/{department_id}": {
      "get": {
        "summary": "Получить отдел юрлица",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Department"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "getDepartmentsShow",
        "parameters": [],
        "description": "Возвращает отдел юрлица",
        "tags": [
          "Отделы юрлиц"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "department_id",
          "in": "path",
          "required": true,
          "description": "ИД отдела юрлица"
        }
      ],
      "put": {
        "summary": "Редактирование отдела юрлица",
        "operationId": "putDepartmentsUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Department"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Обновляет информацию отдела юрлица",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название отдела юрлица"
                  },
                  "parent_id": {
                    "type": "integer",
                    "description": "ИД родительского отдела юрлица",
                    "nullable": true
                  }
                },
                "required": [
                  "name",
                  "parent_id"
                ]
              }
            }
          }
        },
        "tags": [
          "Отделы юрлиц"
        ]
      },
      "delete": {
        "summary": "Удаление отдела юрлица",
        "operationId": "deleteDepartmentsItem",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "description": "Удаляет отдел юрлица",
        "tags": [
          "Отделы юрлиц"
        ]
      }
    },
    "/positions": {
      "get": {
        "summary": "Получить все должности",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Position"
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "operationId": "getPositionsIndex",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name",
            "description": "Фильтр по названию должности"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "with_trashed",
            "description": "Включить в выборку удаленные записи"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "only_trashed",
            "description": "Делать выборку только из удаленных записей"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id",
                "name",
                "-name"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "Сортировка записей"
          }
        ],
        "description": "Возвращает список должностей",
        "tags": [
          "Должности"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Создать должность",
        "operationId": "postPositionsStore",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Position"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Создаёт должность",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название должности"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "tags": [
          "Должности"
        ]
      }
    },
    "/positions/{position_id}": {
      "get": {
        "summary": "Получить должность",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Position"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "getPositionsShow",
        "parameters": [],
        "description": "Возвращает должность",
        "tags": [
          "Должности"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "position_id",
          "in": "path",
          "required": true,
          "description": "ИД должности"
        }
      ],
      "put": {
        "summary": "Редактирование должности",
        "operationId": "putPositionsUpdate",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Position"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Обновляет информацию должности",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Название должности"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "tags": [
          "Должности"
        ]
      },
      "delete": {
        "summary": "Удаление должности",
        "operationId": "deletePositionsItem",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "description": "Удаляет должность",
        "tags": [
          "Должности"
        ]
      }
    },
    "/employees/find": {
      "get": {
        "summary": "Найти штатного сотрудника по номеру телефона",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee"
                      }
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "operationId": "findEmployeeByPhone",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "phone",
            "description": "Фильтр по номеру телефона исполнителя",
            "required": true
          },
          {
            "$ref": "#/components/parameters/employee_include"
          }
        ],
        "description": "Возвращает данные штатного сотрудника по номеру телефона",
        "tags": [
          "Штатные сотрудники"
        ]
      }
    },
    "/employees": {
      "post": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Создать нового штатного сотрудника",
        "operationId": "postEmployeeStore",
        "parameters": [
          {
            "$ref": "#/components/parameters/employee_include"
          }
        ],
        "requestBody": {
          "description": "Создает нового штатного сотрудника",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Штатный сотрудник",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      },
      "get": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Получить всех штатных сотрудников",
        "description": "Список всех штатных сотрудников с пагинацией",
        "operationId": "getEmployeeIndex",
        "responses": {
          "200": {
            "description": "Список штатных сотрудников",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Employee"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "schema": {
              "type": "string",
              "example": "Василий"
            },
            "in": "query",
            "name": "search",
            "description": "Поисковый запрос"
          },
          {
            "schema": {
              "type": "string",
              "example": "61,51,88"
            },
            "in": "query",
            "name": "agent_id",
            "description": "Фильтр по юр.лицам в которые устроен сотрудник"
          },
          {
            "schema": {
              "type": "string",
              "example": "61,51,88"
            },
            "in": "query",
            "name": "department_id",
            "description": "Фильтр по отделам в которые устроен сотрудник"
          },
          {
            "schema": {
              "type": "string",
              "example": "61,51,88"
            },
            "in": "query",
            "name": "position_id",
            "description": "Фильтр по должностям занимаемым сотрудником"
          },
          {
            "schema": {
              "type": "string",
              "example": "not_released,released,release_failed"
            },
            "in": "query",
            "name": "signature_state",
            "description": "Фильтр по статусу УНЭП"
          },
          {
            "$ref": "#/components/parameters/employee_include"
          }
        ]
      }
    },
    "/employees/{employee_id}": {
      "get": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Получить штатного сотрудника",
        "operationId": "getEmployeeShow",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/employee_include"
          }
        ],
        "responses": {
          "200": {
            "description": "Штатный сотрудник",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Редактирование штатного сотрудника",
        "operationId": "putEmployeeUpdate",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/employee_include"
          }
        ],
        "requestBody": {
          "description": "Редактирует данные штатного сотрудника",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновленный штатный сотрудник",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Employee"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      },
      "delete": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Удаление штатного сотрудника",
        "operationId": "deleteEmployeeItem",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Штатный сотрудник удачно удален"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/employees/{employee_id}/workplaces": {
      "post": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Устроить штатного сотрудника на место работы",
        "operationId": "postEmployeeWorkplaceEmploymentStore",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Редактирует данные штатного сотрудника",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeWorkplaceStoreRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Новое место работы",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/EmployeeWorkplace"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      },
      "get": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Получить места работы штатного сотрудника",
        "operationId": "getEmployeeWorkplaceIndex",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          }
        ],
        "responses": {
          "200": {
            "description": "Место работы",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/EmployeeWorkplace"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/employees/{employee_id}/workplaces/{workplace_id}": {
      "get": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Получить место работы штатного сотрудника",
        "operationId": "getEmployeeWorkplaceShow",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "workplace_id",
            "in": "path",
            "description": "Уникальный идентификатор места работы",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список мест работы штатного сотрудника",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeWorkplace"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    },
                    "links": {
                      "$ref": "#/components/schemas/PaginationLinks"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      },
      "delete": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Уволить с места работы",
        "operationId": "deleteEmployeeWorkplaceItem",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "workplace_id",
            "in": "path",
            "description": "Уникальный идентификатор места работы",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Обновленное место работы",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/EmployeeWorkplace"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        }
      }
    },
    "/employees/{employee_id}/workplaces/sync": {
      "post": {
        "tags": [
          "Штатные сотрудники"
        ],
        "summary": "Синхронизировать места работы штатного сотрудника",
        "description": "Метод получает на вход список мест работы сотрудника. Если в переданном списке есть новые места работы, о которых система еще не знает, - сотрудник устраивается на эти места работы. Если в системе есть места работы, которые не присутсвуют в переданном списке, - сотрудник уволняется с этих мест работы. Данные по оставшимся местам работы обновляются\n",
        "operationId": "postEmployeeWorkplaceEmploymentSync",
        "parameters": [
          {
            "name": "employee_id",
            "in": "path",
            "description": "Уникальный идентификатор штатного сотрудника",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeWorkplaceSyncRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Синхронизация завершена успешно"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        }
      }
    },
    "/documents": {
      "get": {
        "summary": "Получить все документы",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Document"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "operationId": "getDocumentsIndex",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "user_id",
            "description": "Документы, в которых указанный пользователь является одним из подписантов"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "employee_id",
            "description": "Документы, в которых указанный пользователь является одним из подписантов со стороны сотрудников"
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "manager_id",
            "description": "Документы, в которых указанный пользователь является одним из подписантов со стороны руководителей"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_signed_by_manager",
            "description": "Документы, подписанные всеми руководителями"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_signed_by_employee",
            "description": "Документы, подписанные всеми сотрудниками"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_signed",
            "description": "Документы, подписанные всеми подписантами"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "-id"
              ]
            },
            "in": "query",
            "name": "order",
            "description": "Сортировка записей"
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "agent_id",
            "description": "Документы, указанного юр. лица"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "name": "created_date_from",
            "description": "Документы, созданные после указанной даты (формат Y-m-d)"
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "name": "created_date_to",
            "description": "Документы, созданные до указанной даты (формат Y-m-d)"
          }
        ],
        "description": "Возвращает список документов",
        "tags": [
          "Документы"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Создать документ",
        "operationId": "postDocumentsStore",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "description": "Создаёт документ",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "external_id": {
                    "type": "string",
                    "maxLength": 64,
                    "description": "Внешний идентификатор (произвольная форма, уникальный)"
                  },
                  "agent_id": {
                    "type": "integer",
                    "description": "ИД юрлица"
                  },
                  "document_type_id": {
                    "type": "integer",
                    "description": "ИД типа документа"
                  },
                  "sign_order": {
                    "$ref": "#/components/schemas/DocumentSignOrderEnum"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 512,
                    "description": "Название документа"
                  },
                  "manual_series": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Серия документа"
                  },
                  "manual_number": {
                    "type": "string",
                    "maxLength": 255,
                    "description": "Номер документа"
                  },
                  "date": {
                    "type": "string",
                    "maxLength": 50,
                    "description": "Дата в документе (произвольный формат)",
                    "nullable": true
                  },
                  "manager_signatures": {
                    "type": "array",
                    "description": "Список подписей руководителей",
                    "items": {
                      "type": "object",
                      "description": "Подпись руководителя",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "description": "ИД пользователя"
                        },
                        "user_position_id": {
                          "type": "integer",
                          "description": "ИД должности пользователя",
                          "nullable": true
                        }
                      },
                      "required": [
                        "user_id"
                      ]
                    }
                  },
                  "employee_signatures": {
                    "type": "array",
                    "description": "Список подписей сотрудников",
                    "items": {
                      "type": "object",
                      "description": "Подпись сотрудника",
                      "properties": {
                        "user_id": {
                          "type": "integer",
                          "description": "ИД пользователя"
                        },
                        "user_position_id": {
                          "type": "integer",
                          "description": "ИД должности пользователя",
                          "nullable": true
                        }
                      },
                      "required": [
                        "user_id"
                      ]
                    }
                  },
                  "author_id": {
                    "type": "integer",
                    "description": "ИД автора (пользователя) документа",
                    "nullable": true
                  },
                  "author_position_id": {
                    "type": "integer",
                    "description": "ИД должности автора (пользователя) документа",
                    "nullable": true
                  },
                  "signature_deadline": {
                    "type": "string",
                    "format": "date",
                    "description": "Дедлайн подписания документа",
                    "nullable": true
                  },
                  "convert_to_pdf_a": {
                    "type": "boolean",
                    "description": "Будет ли система конвертировать загружаемый документв в PDF/A-1a"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary|base64",
                    "description": "Файл документа. Принимаемые форматы: doc,docx,pdf,xls,xlsx. Максимальный размер 10МБ."
                  },
                  "file_name": {
                    "type": "string",
                    "description": "Имя файла. Передается, когда в поле file передано значение в base64"
                  }
                },
                "required": [
                  "agent_id",
                  "document_type_id",
                  "sign_order",
                  "name",
                  "file"
                ]
              }
            }
          }
        },
        "tags": [
          "Документы"
        ]
      }
    },
    "/documents/generate": {
      "post": {
        "tags": [
          "Документы"
        ],
        "description": "Создаёт документ на основе шаблона",
        "operationId": "generate-document-from-template-v3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentForGenerate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DocumentBaseResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "item": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "required": [
                        "item"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "summary": "Создать документ из шаблона"
      },
      "parameters": []
    },
    "/documents/{document_id}": {
      "get": {
        "summary": "Получить документ",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "getDocumentsShow",
        "parameters": [],
        "description": "Возвращает документ",
        "tags": [
          "Документы"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "document_id",
          "in": "path",
          "required": true,
          "description": "ИД документа"
        }
      ],
      "delete": {
        "summary": "Удаление документа",
        "operationId": "deleteDocumentsItem",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "description": "Удаляет документ",
        "tags": [
          "Документы"
        ]
      }
    },
    "/documents/{document_id}/download": {
      "get": {
        "summary": "Скачать оригинальный файл документа",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/msword": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.ms-excel": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "getDocumentsDownloadOriginal",
        "parameters": [],
        "description": "Возвращает оригинальный файл документа",
        "tags": [
          "Документы"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "document_id",
          "in": "path",
          "required": true,
          "description": "ИД документа"
        }
      ]
    },
    "/documents/{document_id}/zip/download": {
      "get": {
        "summary": "Скачать архив подписанного документа",
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "getDocumentsZipDownload",
        "parameters": [],
        "description": "Возвращает архив подписанного документа",
        "tags": [
          "Документы"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "document_id",
          "in": "path",
          "required": true,
          "description": "ИД документа"
        }
      ]
    },
    "/signatures/{signature_id}/sign-on-client/cryptopro": {
      "put": {
        "summary": "Передать результат подписи документа на клиенте при помощи КриптоПро",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "additional": {
                    "type": "object",
                    "properties": {
                      "certificate": {
                        "type": "object",
                        "description": "Расширенная информация о сертификате",
                        "required": [
                          "id",
                          "from",
                          "to",
                          "issuer",
                          "owner"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Идентификатор сертификата"
                          },
                          "from": {
                            "type": "string",
                            "description": "Дата начала действия сертификата",
                            "format": "date-time"
                          },
                          "to": {
                            "type": "string",
                            "description": "Дата окончания действия сертификата",
                            "format": "date-time"
                          },
                          "issuer": {
                            "type": "object",
                            "description": "Информация о организации выдавшей сертификат",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Название организации которая выдала сертификат"
                              }
                            }
                          },
                          "owner": {
                            "type": "object",
                            "description": "Информация о владельце сертификата",
                            "required": [
                              "agent",
                              "inn"
                            ],
                            "properties": {
                              "agent": {
                                "type": "string",
                                "description": "Название организации владеющая сертификатом"
                              },
                              "inn": {
                                "type": "string",
                                "description": "ИНН организации, владеющей сертификатом. Можно передать несколько ИНН, разделяя каждый ИНН запятой.",
                                "example": "059627371179,174582707778,730408357502"
                              },
                              "name": {
                                "type": "string",
                                "description": "Имя лица, которому выдан сертификат"
                              },
                              "position": {
                                "type": "string",
                                "description": "Должность лица, которому выдан сертификат"
                              }
                            }
                          }
                        }
                      },
                      "file_for_sign": {
                        "type": "object",
                        "description": "Расширенная информация о подписываемом файле",
                        "properties": {
                          "sha256": {
                            "type": "string",
                            "description": "sha256 подписываемого файла"
                          }
                        }
                      },
                      "hash_file_signed": {
                        "type": "boolean",
                        "description": "Подписан сам оригинальный файл документа или его хэш-файл"
                      }
                    },
                    "required": [
                      "certificate"
                    ]
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Signature"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "signDocumentOnClientByCryptoPro",
        "parameters": [],
        "description": "Передать результат подписи документа на клиенте при помощи КриптоПро",
        "tags": [
          "Подписи документов"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "signature_id",
          "in": "path",
          "required": true,
          "description": "ИД подписи"
        }
      ]
    },
    "/signatures/{signature_id}/reject": {
      "put": {
        "summary": "Отказаться от подписи документа",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reject_reason"
                ],
                "properties": {
                  "reject_reason": {
                    "type": "string",
                    "example": "Пример причины отказа от подписания.",
                    "description": "Причина отказа от подписания."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/Signature"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/404NotFound"
          }
        },
        "operationId": "rejectDocument",
        "parameters": [],
        "description": "Отказаться от подписи документа",
        "tags": [
          "Подписи документов"
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "signature_id",
          "in": "path",
          "required": true,
          "description": "ИД подписи"
        }
      ]
    },
    "/payslips/import": {
      "post": {
        "tags": [
          "Расчетные листы"
        ],
        "operationId": "payslips-import",
        "description": "Импортирует расчетный лист",
        "summary": "Импортировать расчетный лист",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "contractor_id",
                  "agent_id",
                  "period_year",
                  "period_month",
                  "file"
                ],
                "properties": {
                  "contractor_id": {
                    "type": "integer"
                  },
                  "agent_id": {
                    "type": "integer"
                  },
                  "period_year": {
                    "type": "integer",
                    "description": "Передавать в формате \"%Y\", например, 2022."
                  },
                  "period_month": {
                    "type": "integer",
                    "description": "Передавать в формате \"%n\" (без нуля слева), например, 9 или 12."
                  },
                  "file": {
                    "type": "string",
                    "format": "binary|base64",
                    "description": "Файл расчетного листа. Принимаемый формат: pdf."
                  },
                  "file_name": {
                    "type": "string",
                    "description": "Поле обязательно для заполнения, если файл передается в формате base64."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/employee-statement-templates": {
      "get": {
        "description": "Получить список шаблонов заявлений",
        "operationId": "get-employee-statement-templates",
        "parameters": [
          {
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "type": "string",
              "example": "placeholders,agent,group"
            },
            "description": "Получение дополнительных данных"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "in": "query",
            "name": "agent_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "ИД юр.лица к которому относится шаблон заявления"
          },
          {
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "ИД раздела к которому относится шаблон заявления"
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string",
              "example": "-index,-id"
            },
            "description": "Порядок сортировки"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeStatementTemplate"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "security": [
          {
            "ApiKeyHeader": []
          },
          {
            "ApiKeyQuery": []
          }
        ],
        "tags": [
          "Шаблоны заявлений"
        ],
        "summary": "Получить все шаблоны заявлений"
      }
    },
    "/employee-statements": {
      "get": {
        "description": "Получить список заявлений",
        "operationId": "get-employee-statements",
        "parameters": [
          {
            "in": "query",
            "name": "include",
            "required": false,
            "schema": {
              "type": "string",
              "example": "substitutions,approval_stages,agent,group,template"
            },
            "description": "Получение дополнительных данных"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "in": "query",
            "name": "agent_id",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Заявления, принадлежащие к указанному юр. лицу"
          },
          {
            "in": "query",
            "name": "group_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, принадлежащие к указанной группе заявлений"
          },
          {
            "in": "query",
            "name": "template_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, сформированные по указанному шаблону заявления"
          },
          {
            "in": "query",
            "name": "author_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, сформированные указанным сотрудником"
          },
          {
            "in": "query",
            "name": "author_position_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, сформированные сотрудником в указанной должности"
          },
          {
            "in": "query",
            "name": "approver_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, у которых указанный сотрудник является согласующим"
          },
          {
            "in": "query",
            "name": "need_approving_by_approver_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, у которых указанный сотрудник является согласующим и которые еще не согласованы этим сотрудником"
          },
          {
            "in": "query",
            "name": "approving_completed_by_approver_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, у которых указанный сотрудник является согласующим и по которым завершено согласование этим сотрудником"
          },
          {
            "in": "query",
            "name": "user_id",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "Заявления, в которых указанный сотрудник является либо автором либо согласующим"
          },
          {
            "in": "query",
            "name": "created_at_more_than",
            "required": false,
            "schema": {
              "type": "string",
              "format": "datetime"
            },
            "description": "Заявления, у которых дата создания больше чем"
          },
          {
            "in": "query",
            "name": "created_at_less_than",
            "required": false,
            "schema": {
              "type": "string",
              "format": "datetime"
            },
            "description": "Заявления, у которых дата создания меньше чем"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "sent_to_processing_at_more_than",
            "description": "Заявления, у которых дата взятия в работу больше чем"
          },
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "query",
            "name": "sent_to_processing_at_less_than",
            "description": "Заявления, у которых дата взятия в работу меньше чем"
          },
          {
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Поисковый запрос"
          },
          {
            "in": "query",
            "name": "is_signed",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Заявления, которые подписаны"
          },
          {
            "in": "query",
            "name": "is_approved",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Заявления, которые полностью согласованы всем согласующими"
          },
          {
            "in": "query",
            "name": "is_revoked",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Заявления, которые отклонены"
          },
          {
            "in": "query",
            "name": "order",
            "required": false,
            "schema": {
              "type": "string",
              "example": "id, -created_at"
            },
            "description": "Порядок сортировки"
          }
        ],
        "tags": [
          "Заявления"
        ],
        "security": [
          {
            "ApiKeyHeader": []
          },
          {
            "ApiKeyQuery": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EmployeeStatement"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/PaginationMeta"
                    }
                  },
                  "required": [
                    "items",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/403Forbidden"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "summary": "Получить все заявления"
      }
    },
    "/astral/subscribers/issue-requests": {
      "post": {
        "tags": [
          "Провайдеры подписей"
        ],
        "operationId": "signature-providers-create-astral-subscribers-issue-request",
        "description": "Создает запрос на выпуск УНЭП штатным сотрудникам, подпадающим под выборку фильтра. Если поле ИД сотрудников в фильтре отсутствует, будет считаться, что в выборку должны попасть все штатные сотрудники компании. УНЭП будут выпущены только тем сотрудникам, которые еще не имеют УНЭП и данных по которым достаточно для выпуска.",
        "summary": "Создать запрос на выпуск УНЭП",
        "responses": {
          "204": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/401Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/422UnprocessableEntity"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "identification_type": {
                    "type": "string",
                    "description": "Способ идентификации сотрудниками, для которых нужно выпустить УНЭП",
                    "enum": [
                      "personal",
                      "epgu"
                    ]
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "employee_id": {
                        "type": "array",
                        "description": "Массив ИД штатных сотрудников, для которых нужно выпустить УНЭП",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "identification_type"
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "Client-Key"
      },
      "ApiKeyQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "client_key"
      }
    },
    "responses": {
      "400BadRequest": {
        "description": "Неверный запрос",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": {
                "title": "Неверный запрос",
                "detail": "Неверный запрос.",
                "fields": null,
                "code": 400
              }
            }
          }
        }
      },
      "401Unauthorized": {
        "description": "Ошибка авторизации",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": {
                "title": "Ошибка авторизации",
                "detail": "Требуется авторизация",
                "fields": null,
                "code": 401
              }
            }
          }
        }
      },
      "403Forbidden": {
        "description": "Нет доступа к ресурсу",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": {
                "title": "Доступ ограничен",
                "detail": "This action is unauthorized.",
                "fields": null,
                "code": 403
              }
            }
          }
        }
      },
      "404NotFound": {
        "description": "Ресурс не найден",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": {
                "title": "Ошибка",
                "detail": "Ресурс не найден",
                "fields": null,
                "code": 404
              }
            }
          }
        }
      },
      "422UnprocessableEntity": {
        "description": "Ошибка валидации",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "example": {
              "error": {
                "title": "Ошибка",
                "detail": "The given data was invalid.",
                "fields": [
                  {
                    "field": "name",
                    "messages": [
                      "Поле Название обязательно для заполнения."
                    ]
                  },
                  {
                    "field": "inn",
                    "messages": [
                      "Поле ИНН обязательно для заполнения."
                    ]
                  }
                ],
                "code": 422
              }
            }
          }
        }
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "detail": {
                "type": "string",
                "description": "Детальное описание ошибки"
              },
              "code": {
                "type": "number",
                "description": "Код ответа"
              },
              "fields": {
                "type": "array",
                "description": "Список полей с ошибками",
                "nullable": true,
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "Название поле в котором произошла ошибка"
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Описание ошибки"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AgentStoreUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название юрлица"
          },
          "inn": {
            "type": "string",
            "description": "ИНН юрлица"
          },
          "ogrn": {
            "type": "string",
            "description": "ОГРН юрлица"
          },
          "address": {
            "type": "string",
            "description": "Адрес юрлица (используется для документов)"
          },
          "city": {
            "type": "string",
            "description": "Город юрлица (используется для актов)"
          },
          "ogrn_date": {
            "type": "string",
            "description": "Дата получения ОГРН (используется для актов)"
          },
          "management_name": {
            "type": "string",
            "description": "ФИО руководителя (используется для актов у юр. лиц)"
          },
          "management_post": {
            "type": "string",
            "description": "Должность руководителя (используется для актов у юр. лиц)"
          },
          "individual_entrepreneur_surname": {
            "type": "string",
            "description": "Фамилия (используется для актов у ИП)"
          },
          "individual_entrepreneur_name": {
            "type": "string",
            "description": "Имя (используется для актов у ИП)"
          },
          "individual_entrepreneur_patronymic": {
            "type": "string",
            "description": "Отчество (используется для актов у ИП)"
          }
        },
        "required": [
          "name",
          "inn",
          "ogrn",
          "address"
        ]
      },
      "AgentStorePatchRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название юрлица"
          },
          "inn": {
            "type": "string",
            "description": "ИНН юрлица"
          },
          "ogrn": {
            "type": "string",
            "description": "ОГРН юрлица"
          },
          "address": {
            "type": "string",
            "description": "Адрес юрлица (используется для документов)"
          },
          "city": {
            "type": "string",
            "description": "Город юрлица (используется для актов)"
          },
          "ogrn_date": {
            "type": "string",
            "description": "Дата получения ОГРН (используется для актов)"
          },
          "management_name": {
            "type": "string",
            "description": "ФИО руководителя (используется для актов у юр. лиц)"
          },
          "management_post": {
            "type": "string",
            "description": "Должность руководителя (используется для актов у юр. лиц)"
          },
          "individual_entrepreneur_surname": {
            "type": "string",
            "description": "Фамилия (используется для актов у ИП)"
          },
          "individual_entrepreneur_name": {
            "type": "string",
            "description": "Имя (используется для актов у ИП)"
          },
          "individual_entrepreneur_patronymic": {
            "type": "string",
            "description": "Отчество (используется для актов у ИП)"
          }
        }
      },
      "BranchOfficeItem": {
        "type": "object",
        "description": "Филиал",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID филиала",
            "example": 1234
          },
          "name": {
            "type": "string",
            "description": "Название филиала",
            "example": "Филиал 1"
          },
          "address": {
            "type": "string",
            "description": "Адрес филиала",
            "example": "г. Москва, ул. Ленина, д. 1"
          },
          "limit_monthly": {
            "type": "number",
            "description": "Лимит на выплаты в месяц",
            "example": 100000
          },
          "limit_daily": {
            "type": "number",
            "description": "Лимит на выплаты в день",
            "example": 10000
          },
          "is_active": {
            "type": "boolean",
            "description": "Флаг активности филиала",
            "example": true
          },
          "agent": {
            "type": "object",
            "description": "Юридическое лицо",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ID юридического лица",
                "example": 1234
              },
              "name": {
                "type": "string",
                "description": "Название юридического лица",
                "example": "ООО Карат Тест"
              }
            }
          }
        }
      },
      "BranchOfficeEditRequest": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "integer",
            "description": "Идентификатор юридического лица",
            "required": false
          },
          "name": {
            "type": "string",
            "description": "Название филиала",
            "required": false
          },
          "address": {
            "type": "string",
            "description": "Адрес филиала",
            "required": false
          },
          "limit_monthly": {
            "type": "number",
            "description": "Лимит на месяц по филиалу (null безлимит)",
            "required": false,
            "default": null
          },
          "limit_daily": {
            "type": "number",
            "description": "Лимит на день по филиалу (null безлимит)",
            "required": false,
            "default": null
          },
          "is_active": {
            "type": "integer",
            "description": "Флаг активности филиала (1 - активен, 0 - выключен)",
            "required": false
          }
        }
      },
      "ContractorStoreRequest": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "телефон в формате +79000000000"
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "отчество"
          },
          "first_name": {
            "type": "string",
            "description": "имя"
          },
          "legal_form_id": {
            "type": "number",
            "description": "идентификатор правовой формы"
          },
          "agent_id": {
            "type": "number",
            "description": "идентификатор юрлица"
          },
          "group_id": {
            "type": "number",
            "description": "идентификатор группы"
          },
          "inn": {
            "type": "string"
          },
          "company_agrees_pay_taxes": {
            "type": "boolean",
            "description": "уплачивать ли налоги за самозанятого"
          }
        },
        "required": [
          "phone",
          "last_name",
          "first_name",
          "legal_form_id",
          "agent_id",
          "group_id"
        ]
      },
      "CreateContractorIdentificationRequest": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string",
            "description": "Код страны в формате ISO 3166-1 alpha-3 в нижнем регистре",
            "example": "rus"
          },
          "is_verified": {
            "type": "boolean",
            "description": "Является верифицированным",
            "example": true
          },
          "snils": {
            "type": "string",
            "description": "СНИЛС",
            "example": 12345678901
          },
          "inn": {
            "type": "string",
            "description": "ИНН",
            "example": 123456789012
          },
          "passport": {
            "type": "object",
            "description": "Паспортные данные",
            "properties": {
              "first_name": {
                "type": "string",
                "description": "Имя",
                "example": "Иван"
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия",
                "example": "Иванов"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество",
                "example": "Иванович"
              },
              "gender": {
                "type": "string",
                "enum": [
                  "male",
                  "female"
                ],
                "description": "Пол",
                "example": "male"
              },
              "number": {
                "type": "string",
                "description": "Серия и номер паспорта",
                "example": "1234 123456"
              },
              "department_name": {
                "type": "string",
                "description": "Наименование отделения, где был выдан паспорт",
                "example": "МВД по г. Москва"
              },
              "department_code": {
                "type": "string",
                "description": "Номер отделения, где был выдан паспорт",
                "example": 170001
              },
              "issued_at": {
                "type": "string",
                "format": "date-time",
                "description": "Дата выдачи",
                "example": "01.01.1990"
              },
              "birthdate": {
                "type": "string",
                "format": "date-time",
                "description": "Дата рождения",
                "example": "01.01.1990"
              },
              "birthdate_place": {
                "type": "string",
                "description": "Место рождения",
                "example": "г. Москва"
              },
              "address": {
                "type": "object",
                "description": "Адрес по прописке",
                "properties": {
                  "full_address": {
                    "type": "string",
                    "description": "Полнsq адрес прописки в свободной форме",
                    "example": "РОССИЯ, 140000, Московская обл, г Химки, ул Советская, д. 22, к. 2, кв. 30"
                  },
                  "detailed": {
                    "type": "object",
                    "description": "Очищенный адрес в формате КЛАДР",
                    "properties": {
                      "zip_code": {
                        "type": "string",
                        "description": "Почтовый индекс",
                        "example": 140000
                      },
                      "country": {
                        "type": "object",
                        "description": "Информация о стране",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Наименование страны",
                            "example": "РОССИЯ"
                          },
                          "code": {
                            "type": "string",
                            "description": "Код страны в формате ISO 3166-1 numeric",
                            "example": 643
                          }
                        },
                        "required": [
                          "name",
                          "code"
                        ]
                      },
                      "area": {
                        "type": "object",
                        "description": "Информация о виде субъекта",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Наименование субъекта",
                            "example": "Московская"
                          },
                          "type": {
                            "type": "string",
                            "description": "Вид субъекта",
                            "example": "обл"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "city": {
                        "type": "object",
                        "description": "Информация о городе",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Наименование города",
                            "example": "Химки"
                          },
                          "type": {
                            "type": "string",
                            "description": "Тип города",
                            "example": "г"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "street": {
                        "type": "object",
                        "description": "Информация о улице/проспекте",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Наименование улицы/проспекта",
                            "example": "Советская"
                          },
                          "type": {
                            "type": "string",
                            "description": "Тип улицы (улица, проспект)",
                            "example": "ул"
                          }
                        },
                        "required": [
                          "name",
                          "type"
                        ]
                      },
                      "house": {
                        "type": "object",
                        "description": "Информация о доме",
                        "properties": {
                          "number": {
                            "type": "string",
                            "description": "Номер дома",
                            "example": 22
                          },
                          "type": {
                            "type": "string",
                            "description": "Тип дома",
                            "example": "Дом"
                          }
                        },
                        "required": [
                          "number",
                          "type"
                        ]
                      },
                      "buildings": {
                        "type": "array",
                        "description": "Информация о доме",
                        "items": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Номер строения",
                              "example": 2
                            },
                            "type": {
                              "type": "string",
                              "description": "Тип строения",
                              "example": "Корпус"
                            }
                          },
                          "required": [
                            "number",
                            "type"
                          ]
                        }
                      },
                      "apartment": {
                        "type": "object",
                        "description": "Информация о квартире",
                        "properties": {
                          "number": {
                            "type": "string",
                            "description": "Номер квартиры",
                            "example": 30
                          },
                          "type": {
                            "type": "string",
                            "description": "Тип квартиры",
                            "example": "Квартира"
                          }
                        },
                        "required": [
                          "number",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "full_address"
                ]
              }
            }
          }
        },
        "required": [
          "country"
        ]
      },
      "EmployeeStoreRequest": {
        "type": "object",
        "properties": {
          "inn": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "телефон в формате +79000000000"
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "фамилия"
          },
          "first_name": {
            "type": "string",
            "description": "имя"
          },
          "middle_name": {
            "type": "string",
            "description": "отчество",
            "nullable": true
          },
          "workplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeWorkplaceStoreRequest"
            }
          }
        },
        "required": [
          "phone",
          "last_name",
          "first_name",
          "workplaces"
        ]
      },
      "EmployeeUpdateRequest": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "телефон в формате +79000000000"
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "фамилия"
          },
          "first_name": {
            "type": "string",
            "description": "имя"
          },
          "middle_name": {
            "type": "string",
            "description": "отчество",
            "nullable": true
          }
        },
        "required": [
          "phone",
          "last_name",
          "first_name"
        ]
      },
      "EmployeeWorkplaceStoreRequest": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "integer",
            "description": "Уникальный идентификатор юр. лица"
          },
          "department_id": {
            "type": "integer",
            "description": "Уникальный идентификатор отдела"
          },
          "position_id": {
            "type": "integer",
            "description": "Уникальный идентификатор должности"
          },
          "can_sign_as_manager": {
            "type": "boolean",
            "description": "Может ли подписывать документы от лица компании"
          },
          "employment_date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата устройства в ISO"
          },
          "production_calendar_id": {
            "type": "string",
            "description": "Ид производственного календаря"
          }
        },
        "required": [
          "agent_id",
          "department_id",
          "position_id"
        ]
      },
      "EmployeeWorkplaceSyncRequest": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "string",
            "description": "Список ИД юр. лиц, в рамках которого должна произойти синхронизация мест работы штатных сотрудников. Если не передано, синхронизация проходит в рамках всех юр. лиц компании.",
            "example": "1,2,3"
          },
          "workplaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EmployeeWorkplaceStoreRequest"
            }
          }
        },
        "required": [
          "workplaces"
        ]
      },
      "VacationsSyncRequest": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "employee_id": {
                  "type": "integer",
                  "description": "ИД штатного сотрудника"
                },
                "workplaces": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SyncableWorkplace"
                  }
                }
              },
              "required": [
                "employee_id",
                "workplaces"
              ]
            }
          },
          "year": {
            "type": "integer",
            "description": "Год, в рамках которого производится синхронизация отпусков",
            "example": 2023
          }
        },
        "required": [
          "items",
          "year"
        ]
      },
      "SyncableWorkplace": {
        "type": "object",
        "properties": {
          "agent_id": {
            "type": "integer",
            "description": "ИД юридического лица"
          },
          "department_id": {
            "type": "integer",
            "description": "ИД отдела"
          },
          "position_id": {
            "type": "integer",
            "description": "ИД должности"
          },
          "vacations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SyncableVacation"
            }
          }
        },
        "required": [
          "agent_id",
          "department_id",
          "position_id",
          "vacations"
        ]
      },
      "SyncableVacation": {
        "type": "object",
        "properties": {
          "vacation_kind_id": {
            "type": "string",
            "description": "ИД вида отпуска"
          },
          "date_from": {
            "type": "string",
            "format": "date",
            "description": "Дата начала отпуска"
          },
          "date_to": {
            "type": "string",
            "format": "date",
            "description": "Дата окончания отпуска"
          },
          "vacation_days": {
            "type": "integer",
            "description": "Количество календарных дней за период отпуска"
          }
        },
        "required": [
          "vacation_kind_id",
          "date_from",
          "date_to",
          "vacation_days"
        ]
      },
      "PaymentStoreRequest": {
        "type": "object",
        "description": "Запрос на создание выплаты",
        "properties": {
          "requisite": {
            "description": "Не указывается, если используется параметр requisite_id или требуется использовать реквизит по умолчанию",
            "anyOf": [
              {
                "description": "Карта банка по номеру телефона. Если реквизит еще не существует будет создан новый. Если не передан requisite_id, то является обязательным.",
                "properties": {
                  "type_id": {
                    "type": "integer"
                  },
                  "account_number": {
                    "type": "string"
                  },
                  "sbp_bank_id": {
                    "type": "integer"
                  }
                }
              },
              {
                "description": "Карта банка по номеру карты. Если реквизит еще не существует будет создан новый. Если не передан requisite_id, то является обязательным.",
                "properties": {
                  "type_id": {
                    "type": "integer"
                  },
                  "account_number": {
                    "type": "string"
                  }
                }
              }
            ],
            "type": "object"
          },
          "customer_payment_id": {
            "type": "string",
            "description": "Идентификатор выплаты в системе клиента. Два платежа с одним и тем же идентификатором не могут быть созданы в системе. Идентификатор может содержать только латинские буквы, цифры, пробелы и символы -_.!:*()[]@$~`^,;=<>|{}‘.",
            "maxLength": 36
          },
          "contractor_id": {
            "type": "integer",
            "description": "идентификатор исполнителя"
          },
          "amount": {
            "type": "number",
            "description": "сумма выплаты"
          },
          "agent_id": {
            "type": "integer",
            "description": "идентификатор юрлица"
          },
          "branch_office_id": {
            "type": "integer",
            "required": false,
            "description": "Идентификатор филиала"
          },
          "bank_account_id": {
            "type": "integer",
            "required": false,
            "description": "Идентификатор счета"
          },
          "service_name": {
            "type": "string",
            "description": "наименование услуг (только для самозанятых исполнителей)"
          },
          "payment_purpose": {
            "type": "string",
            "description": "назначение платежа"
          },
          "balance_id": {
            "type": "integer",
            "description": "идентификатор баланса",
            "nullable": true
          },
          "requisite_id": {
            "type": "integer",
            "description": "Идентификатор реквизита",
            "nullable": true
          },
          "sbp_validation_data": {
            "type": "object",
            "description": "Данные для проверки в СБП платеже",
            "properties": {
              "first_name": {
                "type": "string",
                "description": "Имя получателя"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество получателя"
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия получателя"
              }
            },
            "nullable": true
          },
          "act": {
            "type": "object",
            "description": "Данные для создания акта по выплате",
            "properties": {
              "document_number": {
                "description": "Номер документа",
                "type": "string",
                "example": "№123"
              },
              "document_date": {
                "description": "Дата создания документа",
                "type": "string",
                "example": "2022-08-11"
              },
              "period_from": {
                "description": "Дата начала выполнения работ",
                "type": "string",
                "example": "2022-08-11"
              },
              "period_to": {
                "description": "Дата окончания выполнения работ",
                "type": "string",
                "example": "2022-09-11"
              },
              "template_id": {
                "description": "Идентификатор шаблона акта",
                "type": "integer",
                "example": 1,
                "nullable": true
              },
              "job_types": {
                "description": "Виды работ",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Название вида работ",
                      "example": "Тестовое задание"
                    },
                    "price": {
                      "type": "number",
                      "description": "Цена",
                      "example": 112.4
                    },
                    "count": {
                      "type": "integer",
                      "description": "Количество",
                      "example": 3
                    },
                    "measure_id": {
                      "type": "integer",
                      "description": "Единица измерения: 1 - час, 2 - штука, 3 - услуга ",
                      "example": 2
                    }
                  }
                }
              }
            },
            "nullable": true
          },
          "buyer": {
            "type": "object",
            "description": "Информация о покупателе (используется для формирования чеков самозанятых исполнителей)",
            "nullable": true,
            "properties": {
              "name": {
                "type": "string",
                "description": "Название покупателя (обязательно, если передан ИНН покупателя)"
              },
              "inn": {
                "type": "string",
                "description": "ИНН покупателя (обязательно, если передано название покупателя)"
              }
            }
          }
        },
        "required": [
          "contractor_id",
          "amount"
        ]
      },
      "Currency": {
        "type": "object",
        "description": "Валюта",
        "properties": {
          "code": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "unicode": {
            "type": "string"
          }
        }
      },
      "Balance": {
        "type": "object",
        "description": "Баланс исполнителя",
        "properties": {
          "value": {
            "type": "number"
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          }
        },
        "example": {
          "value": 0,
          "currency": {
            "code": "RUB",
            "symbol": "&#8381;",
            "title": "Российский рубль",
            "unicode": "\\u20BD"
          }
        }
      },
      "LegalForm": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор правовой формы"
          },
          "title": {
            "type": "string",
            "description": "Название правовой формы"
          },
          "is_self_employed": {
            "type": "boolean",
            "description": "Самозанятый или нет"
          }
        },
        "example": {
          "id": 1,
          "title": "Физическое лицо",
          "is_self_employed": false
        }
      },
      "AgentProfilePreview": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор юрлица"
          },
          "name": {
            "type": "string",
            "description": "Название юрлица"
          }
        },
        "example": {
          "id": 123,
          "name": "ООО Фаворит"
        }
      },
      "AgentProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор юрлица"
          },
          "name": {
            "type": "string",
            "description": "Название юрлица"
          },
          "inn": {
            "type": "string",
            "description": "ИНН"
          },
          "ogrn": {
            "type": "string",
            "description": "ОГРН"
          },
          "address": {
            "type": "string",
            "description": "Адрес"
          },
          "updated_at": {
            "type": "string",
            "description": "Дата обновления в ISO"
          }
        }
      },
      "ContractorProfile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор исполнителя"
          },
          "phone": {
            "type": "string",
            "description": "Телефон в формате +7**********"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество"
          },
          "inn": {
            "type": "string",
            "nullable": true,
            "description": "ИНН"
          },
          "is_editable": {
            "type": "boolean"
          },
          "updated_at": {
            "type": "string",
            "description": "Дата обновления в ISO"
          },
          "created_at": {
            "type": "string",
            "description": "Дата создания в ISO"
          },
          "balance": {
            "$ref": "#/components/schemas/Balance"
          },
          "agent": {
            "$ref": "#/components/schemas/AgentProfilePreview"
          },
          "legal_form": {
            "$ref": "#/components/schemas/LegalForm"
          }
        },
        "title": "ContractorProfile",
        "example": {
          "id": 0,
          "phone": "string",
          "email": "string",
          "last_name": "string",
          "first_name": "string",
          "middle_name": "string",
          "inn": "string",
          "is_editable": true,
          "updated_at": "string",
          "created_at": "string",
          "balance": {
            "value": 0,
            "currency": {
              "code": "RUB",
              "symbol": "&#8381;",
              "title": "Российский рубль",
              "unicode": "\\u20BD"
            }
          },
          "agent": {
            "id": 123,
            "name": "ООО Фаворит"
          },
          "legal_form": {
            "id": 1,
            "title": "Физическое лицо",
            "is_self_employed": false
          }
        }
      },
      "IdentificationRequestPassportView": {
        "type": "object",
        "description": "Запрос идентификации",
        "title": "IdentificationRequestPassportView",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор запроса на идентификацию",
            "example": 1
          },
          "passport": {
            "type": "object",
            "description": "Данные паспорта",
            "required": [
              "number",
              "parsed_number",
              "department_name",
              "department_code",
              "issued_at_formatted",
              "address",
              "first_name",
              "last_name",
              "middle_name",
              "birthdate_formatted",
              "birth_place",
              "gender"
            ],
            "properties": {
              "number": {
                "type": "string",
                "description": "Серия и номер паспорта",
                "nullable": true
              },
              "parsed_number": {
                "type": "object",
                "description": "Распарсенные серия и номер паспорта",
                "required": [
                  "serial",
                  "number"
                ],
                "nullable": true,
                "properties": {
                  "serial": {
                    "type": "string",
                    "description": "Серия",
                    "nullable": true
                  },
                  "number": {
                    "type": "string",
                    "description": "Номер",
                    "nullable": true
                  }
                }
              },
              "department_name": {
                "type": "string",
                "description": "Кем выдан"
              },
              "department_code": {
                "type": "string",
                "description": "Код подразделения",
                "nullable": true
              },
              "issued_at_formatted": {
                "type": "string",
                "description": "Дата выдачи (форматированная dd.mm.yyyy)",
                "nullable": true
              },
              "address": {
                "type": "string",
                "description": "Адрес по прописке",
                "nullable": true
              },
              "address_data": {
                "$ref": "#/components/schemas/IdentificationRequestAddress"
              },
              "first_name": {
                "type": "string",
                "description": "Имя",
                "nullable": true
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия",
                "nullable": true
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество",
                "nullable": true
              },
              "birthdate_formatted": {
                "type": "string",
                "description": "Дата рождения (форматированная dd.mm.yyyy)",
                "nullable": true
              },
              "birth_place": {
                "type": "string",
                "description": "Место рождения",
                "nullable": true
              },
              "gender": {
                "type": "string",
                "description": "Пол",
                "enum": [
                  "male",
                  "female"
                ],
                "nullable": true
              }
            }
          },
          "snils": {
            "type": "string",
            "description": "СНИЛС",
            "nullable": true
          },
          "inn": {
            "type": "string",
            "description": "ИНН",
            "nullable": true
          },
          "country": {
            "type": "object",
            "description": "Гражданство",
            "required": [
              "code",
              "title"
            ],
            "nullable": true,
            "properties": {
              "code": {
                "type": "string",
                "description": "Код страны (ISO 3166-1 Alpha-3)"
              },
              "title": {
                "type": "string",
                "description": "Название гражданства"
              }
            }
          },
          "is_verified": {
            "type": "boolean",
            "description": "Верифицированая или нет идентификация",
            "example": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Дата последнего обновления"
          }
        },
        "required": [
          "id",
          "passport",
          "snils",
          "inn",
          "country",
          "is_verified",
          "created_at",
          "updated_at"
        ]
      },
      "IdentificationRequestSimpleView": {
        "type": "object",
        "title": "IdentificationRequestSimpleView",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД запроса на идентификацию",
            "example": 1
          },
          "contractor_id": {
            "type": "integer",
            "description": "ИД исполнителя",
            "example": 1
          },
          "company_id": {
            "type": "integer",
            "description": "ИД компании",
            "example": 1
          },
          "agent_id": {
            "type": "integer",
            "description": "ИД юр.лица",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "Статус идентификации",
            "enum": [
              "pending",
              "auto_check",
              "manual_check",
              "contractor_approve",
              "rejected",
              "approved"
            ],
            "example": "approved"
          },
          "is_verified": {
            "type": "boolean",
            "description": "Верифицированая или нет идентификация",
            "example": true
          }
        },
        "required": [
          "id",
          "contractor_id",
          "company_id",
          "agent_id",
          "status",
          "is_verified"
        ],
        "description": "Запрос идентификации"
      },
      "IdentificationRequestAddress": {
        "title": "IdentificationRequestAddress",
        "type": "object",
        "description": "Данные адреса",
        "properties": {
          "full_address": {
            "type": "string",
            "description": "Полный адрес"
          },
          "detailed": {
            "type": "object",
            "description": "Адрес в формате КЛАДР",
            "properties": {
              "zip_code": {
                "type": "string",
                "description": "Почтовый индекс"
              },
              "country": {
                "type": "object",
                "description": "Информация о стране",
                "required": [
                  "name",
                  "code"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Наименование страны"
                  },
                  "code": {
                    "type": "string",
                    "description": "Код страны в формате ISO 3166-1 numeric"
                  }
                }
              },
              "area": {
                "type": "object",
                "description": "Информация о виде субъекта",
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Наименование субъекта"
                  },
                  "type": {
                    "type": "string",
                    "description": "Вид субъекта"
                  }
                }
              },
              "city": {
                "type": "object",
                "description": "Информация о городе",
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Наименование города"
                  },
                  "type": {
                    "type": "string",
                    "description": "Тип города"
                  }
                }
              },
              "street": {
                "type": "object",
                "description": "Информация о улице/проспекте",
                "required": [
                  "name",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Наименование улицы/проспекта"
                  },
                  "type": {
                    "type": "string",
                    "description": "Тип улицы (улица, проспект)"
                  }
                }
              },
              "house": {
                "type": "object",
                "description": "Информация о доме",
                "required": [
                  "number",
                  "type"
                ],
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Номер дома"
                  },
                  "type": {
                    "type": "string",
                    "description": "Тип дома"
                  }
                }
              },
              "buildings": {
                "type": "array",
                "description": "Информация о строении",
                "items": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "string",
                      "description": "Номер строения"
                    },
                    "type": {
                      "type": "string",
                      "description": "Тип строения"
                    }
                  },
                  "required": [
                    "number",
                    "type"
                  ]
                }
              },
              "apartment": {
                "type": "object",
                "description": "Информация о квартире",
                "required": [
                  "number",
                  "type"
                ],
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Номер квартиры"
                  },
                  "type": {
                    "type": "string",
                    "description": "Тип квартиры"
                  }
                }
              }
            }
          }
        },
        "required": [
          "full_address",
          "detailed"
        ]
      },
      "ContractorRequisites": {
        "type": "object",
        "title": "ContractorRequisites",
        "example": {
          "id": 0,
          "display_name": "Название реквизитов",
          "description": "Мир · 1519",
          "type": {
            "id": 8,
            "slug": "bank_card",
            "title": "Карта банка по номеру карты"
          },
          "icon": {
            "normal": "https://cdn.jump.finance/image/b/bc/bce1aa6fd5358ee8ad2213f4719bfe9567d0a81e.png",
            "url": "https://cdn.jump.finance/image/b/bc/bce1aa6fd5358ee8ad2213f4719bfe9567d0a81e.png",
            "overlay": true
          },
          "is_available": true,
          "is_default": true,
          "requisite": {
            "bank_name": null,
            "account_number": "2202201080431519",
            "payment_text": null,
            "bik": null,
            "sbp_bank_id": null,
            "inn": null,
            "last_name": "string",
            "first_name": "string",
            "middle_name": "string"
          },
          "created_at": "string"
        },
        "description": "",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор реквизита"
          },
          "display_name": {
            "type": "string",
            "description": "Название реквизита, заданное исполнителем"
          },
          "description": {
            "type": "string",
            "description": "Краткое представление реквизита"
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор типа реквизита"
              },
              "slug": {
                "type": "string"
              },
              "title": {
                "type": "string",
                "description": "Наименование типа реквизита"
              }
            }
          },
          "is_available": {
            "type": "boolean"
          },
          "is_default": {
            "type": "boolean",
            "description": "Является ли реквизитом по умолчанию"
          },
          "requisite": {
            "type": "object",
            "properties": {
              "account_number": {
                "type": "string",
                "description": "Номер карты, счета или телефона, в зависимости от типа реквизита"
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия получателя (тип = банковский счет)"
              },
              "first_name": {
                "type": "string",
                "description": "Имя получателя (тип = банковский счет)"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество получателя (тип = банковский счет)"
              },
              "bik": {
                "type": "string",
                "description": "БИК банка получателя (тип = банковский счет)",
                "nullable": true
              },
              "bank_name": {
                "type": "string",
                "description": "Наименование банка получателя (тип = банковский счет)",
                "nullable": true
              },
              "inn": {
                "type": "string",
                "description": "ИНН получателя (тип = банковский счет)",
                "nullable": true
              },
              "payment_text": {
                "type": "string",
                "description": "Назначение платежа (тип = банковский счет)",
                "nullable": true
              },
              "sbp_bank_id": {
                "type": "integer",
                "description": "ID банка получателя (тип = на карту по номеру телефона)",
                "nullable": true
              }
            }
          },
          "created_at": {
            "type": "string",
            "description": "Дата создания в ISO"
          }
        }
      },
      "Payment": {
        "type": "object",
        "example": {
          "id": 15731787,
          "amount": 101,
          "amount_paid": 74,
          "commission": 20,
          "commission_bank": 14.8,
          "tax_amount": 6,
          "is_final": false,
          "branch_office_id": 1,
          "receipt": {
            "can_cancel": true,
            "cancel_reason": null,
            "key": "2008kkz4ga",
            "status": "active",
            "operation_at": "2021-08-25T15:48:43+03:00",
            "links": {
              "fns_url": "https:\\lknpd.nalog.ru\u0007pi\u000b1\receipt/540450204860/201jgrucjf/print",
              "saved_url": "https://cdn.jump.finance/image/9/94/9438484d95b5fda26ec7c671694f4b43731f6da9.jpg"
            }
          },
          "status": {
            "id": 3,
            "title": "в обработке",
            "theme": "warning"
          },
          "error": null,
          "payment_purpose": null,
          "customer_payment_id": "9f0bb7b7-e5cd-4725-8080-4c230ec702ad",
          "contractor": {
            "id": 68,
            "phone": "+71231230000",
            "full_name": "Вера Илья Клавдия",
            "short_name": "Вера И.К."
          },
          "requisite": {
            "id": 273243,
            "icon": {
              "normal": "https://cdn.jump.finance/image/b/bc/bce1aa6fd5358ee8ad2213f4719bfe9567d0a81e.png",
              "url": "https://cdn.jump.finance/image/b/bc/bce1aa6fd5358ee8ad2213f4719bfe9567d0a81e.png",
              "overlay": true
            },
            "title": "Карта",
            "description": "Mastercard · 8085"
          },
          "creator": {
            "id": 496,
            "full_name": "Карат"
          },
          "agent": {
            "id": 1,
            "full_name": "end-to-end deliver web-readiness"
          },
          "history": [
            {
              "message": "Поставлен в очередь",
              "detail": null,
              "updated_at": "2021-03-18T12:12:08+03:00"
            },
            {
              "message": "Создан. Карат (id:496)",
              "detail": null,
              "updated_at": "2021-03-18T12:12:08+03:00"
            }
          ],
          "act": {
            "id": 1,
            "status": {
              "id": "signed",
              "title": "Подписан"
            }
          },
          "nominal_info": {
            "is_holded": true
          },
          "created_at": "2021-03-18T12:12:08+03:00"
        },
        "description": "Выплата",
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор выплаты"
          },
          "amount": {
            "type": "number",
            "description": "Сумма заявки на выплату"
          },
          "amount_paid": {
            "type": "number",
            "description": "Сумма фактической выплаты (после вычета комиссии с исполнителя и удержаний на уплату налога)"
          },
          "commission": {
            "type": "number",
            "description": "Удержанная с исполнителя сумма комиссии"
          },
          "commission_bank": {
            "type": "number",
            "description": "Сумма комиссии, удержанная банком при проведении выплаты"
          },
          "tax_amount": {
            "type": "number",
            "description": "Удержанная с исполнителя сумма на уплату налога самозанятых"
          },
          "is_final": {
            "type": "boolean",
            "description": "Указывает, является ли статус выплаты финальным"
          },
          "receipt": {
            "type": "object",
            "description": "Информация по выписанному чеку самозанятого",
            "properties": {
              "key": {
                "type": "string",
                "description": "Внутренний ключ ФНС"
              },
              "status": {
                "type": "string",
                "description": "Статус чека"
              },
              "operation_at": {
                "type": "string",
                "description": "Дата формирования чека в ФНС",
                "nullable": true
              },
              "cancel_reason": {
                "type": "string",
                "description": "Причина отмены чека, если отменён",
                "nullable": true
              },
              "can_cancel": {
                "type": "boolean",
                "description": "Флаг указывает, возможно ли произвести отмену чека"
              },
              "links": {
                "type": "object",
                "properties": {
                  "fns_url": {
                    "type": "string",
                    "description": "Ссылка на актуальный чек от ФНС"
                  },
                  "saved_url": {
                    "type": "string",
                    "description": "Ссылка на чек, сохраненный локально в момент его получения"
                  }
                }
              }
            }
          },
          "act": {
            "type": "object",
            "nullable": true,
            "description": "Информация о связанном с выплатой акте",
            "properties": {
              "id": {
                "type": "number",
                "description": "ID акта"
              },
              "status": {
                "type": "object",
                "description": "Статус акта",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "nominal_info": {
            "type": "object",
            "description": "Информация, связанная с номинальным счетом",
            "properties": {
              "is_holded": {
                "type": "boolean",
                "description": "Захолдированы ли средства на номинальном счете"
              }
            }
          },
          "status": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "title": {
                "type": "string"
              },
              "theme": {
                "type": "string"
              }
            }
          },
          "error": {
            "type": "string",
            "nullable": true
          },
          "payment_purpose": {
            "type": "string",
            "nullable": true
          },
          "customer_payment_id": {
            "type": "string",
            "nullable": true,
            "description": "Идентификатор выплаты в системе клиента"
          },
          "contractor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "phone": {
                "type": "string"
              },
              "full_name": {
                "type": "string"
              },
              "short_name": {
                "type": "string"
              }
            }
          },
          "paid_at": {
            "type": "string",
            "nullable": true
          },
          "refund_at": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Идентификатор счета"
          },
          "name": {
            "type": "string",
            "description": "Имя, присвоенное счету в кабинете"
          },
          "balance": {
            "type": "number",
            "description": "Баланс банковского счета"
          },
          "synced_at": {
            "type": "string",
            "description": "Дата и время обновления баланса счета"
          }
        },
        "example": {
          "id": 1100,
          "name": "Тинькофф Jump.Finance",
          "balance": 245103.54,
          "synced_at": "2021-03-18T12:12:08+03:00"
        }
      },
      "BankAccountSyncBalance": {
        "type": "object",
        "properties": {
          "item": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор запроса"
              },
              "created_at": {
                "type": "string",
                "description": "Дата и время постановки запроса в очередь"
              }
            }
          }
        },
        "example": {
          "item": {
            "id": 79433,
            "created_at": "2021-03-18T12:12:08+03:00"
          }
        }
      },
      "Group": {
        "title": "Group",
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          }
        },
        "example": {
          "id": 1,
          "name": "По умолчанию",
          "is_default": true
        }
      },
      "CardBalance": {
        "title": "CardBalance",
        "description": "Баланс",
        "type": "object",
        "example": {
          "id": 1,
          "balance": 100,
          "frozen_balance": 0,
          "type": {
            "id": 6,
            "name": "Яндекс.Про"
          },
          "integration": {
            "id": 1,
            "name": "Внутреннее название интеграции"
          },
          "customer_balance": null,
          "agent": {
            "id": 1,
            "name": "Название юрлица"
          },
          "created_at": "2019-06-11T13:30:02+03:00"
        },
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор баланса"
          },
          "balance": {
            "type": "number",
            "description": "Баланс"
          },
          "frozen_balance": {
            "type": "number",
            "description": "Замороженный баланс"
          },
          "type": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор типа баланса"
              },
              "name": {
                "type": "string",
                "description": "Название типа баланса"
              }
            }
          },
          "integration": {
            "type": "object",
            "description": "null, если это не баланс агрегатора",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор интеграции"
              },
              "name": {
                "type": "string",
                "description": "Внутреннее название интеграции"
              }
            }
          },
          "customer_balance": {
            "type": "object",
            "description": "null, если это не внутренний баланс",
            "nullable": true,
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор внутреннего баланса"
              },
              "name": {
                "type": "string",
                "description": "Название внутреннего баланса"
              }
            }
          },
          "agent": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор юрлица"
              },
              "name": {
                "type": "string",
                "description": "Наименование юрлица"
              }
            }
          },
          "created_at": {
            "type": "string",
            "description": "Дата создания в ISO"
          }
        }
      },
      "Selfemployer": {
        "title": "Selfemployer",
        "description": "Самозанятый",
        "type": "object",
        "example": {
          "inn": "960215602664",
          "is_can_pay_taxes": false,
          "is_verified": true,
          "has_company_agrees_pay_taxes": true,
          "has_warning": true,
          "sync": {
            "in_process": false
          },
          "messages": {
            "status": {
              "type": "error",
              "short_title": "Требуется разрешение",
              "detail": "Исполнитель должен подтвердить разрешение на уплату налогов в личном кабинете налогоплательщика или мобильном приложение «Мой налог» в разделе «Партнёры»."
            }
          }
        },
        "properties": {
          "inn": {
            "type": "string",
            "description": "инн самозанятого"
          },
          "is_verified": {
            "type": "boolean",
            "description": "Получено подтверждение из налоговой, что исполнитель привязан к компании"
          },
          "is_can_pay_taxes": {
            "type": "boolean",
            "description": "Получено подтверждение из налоговой, что самозанятый разрешенил компании уплачивать налог"
          },
          "has_company_agrees_pay_taxes": {
            "type": "boolean",
            "description": "В настройках исполнителя включена опция, что компания уплачивает налог за исполнителя"
          },
          "has_warning": {
            "type": "boolean",
            "description": "Не хватает каких-либо разрешений со стороны самозанятого"
          },
          "sync": {
            "type": "object",
            "properties": {
              "in_process": {
                "type": "boolean",
                "description": "Есть ли активный запущенный процесс"
              }
            }
          },
          "messages": {
            "type": "object",
            "description": "Сообщения",
            "properties": {
              "status": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Варианты error,info,success. Это условные типы сообщения, для организации вывода"
                  },
                  "short_title": {
                    "type": "string"
                  },
                  "detail": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "Integration": {
        "title": "Integration",
        "description": "Интеграция с агрегатором",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор интеграции"
          },
          "name": {
            "type": "string",
            "description": "Внутреннее название интеграции"
          },
          "aggregator": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор агрегатора"
              },
              "name": {
                "type": "string",
                "description": "Название агрегатора"
              }
            }
          },
          "agent": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор юрлица"
              },
              "name": {
                "type": "string",
                "description": "Наименование юрлица"
              }
            }
          },
          "default_group": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор группы"
              },
              "name": {
                "type": "string",
                "description": "Название группы"
              }
            }
          },
          "is_active": {
            "type": "boolean",
            "description": "Активность интеграции"
          },
          "is_login_success": {
            "type": "boolean",
            "description": "Статус безошибочной интеграции"
          },
          "integration_start_date": {
            "type": "string",
            "description": "Дата начала интеграции в ISO"
          }
        },
        "example": {
          "id": 1,
          "name": "Внутреннее название интеграции",
          "aggregator": {
            "id": 6,
            "name": "Яндекс.Про"
          },
          "agent": {
            "id": 1,
            "name": "Название юрлица"
          },
          "default_group": {
            "id": 1,
            "name": "По умолчанию"
          },
          "is_active": true,
          "is_login_success": true,
          "integration_start_date": "2019-06-11T13:30:02+03:00"
        }
      },
      "CustomerBalance": {
        "title": "CustomerBalance",
        "description": "Внутренний баланс компании",
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Уникальный идентификатор внетреннего баланса"
          },
          "name": {
            "type": "string",
            "description": "Название внутреннего баланса"
          },
          "is_active": {
            "type": "boolean",
            "description": "Активность внутреннего баланса"
          }
        },
        "example": {
          "id": 1,
          "name": "Реферальные бонусы",
          "is_active": true
        }
      },
      "Template": {
        "type": "object",
        "required": [
          "id",
          "name",
          "agent",
          "sign_order",
          "manager_contractor"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор шаблона акта",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Название шаблона акта",
            "example": "Акт для курьеров"
          },
          "agent": {
            "type": "object",
            "description": "Юрлицо",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Идентификатор юрлица",
                "example": 1
              },
              "name": {
                "type": "string",
                "description": "Название юрлица",
                "example": "ООО Какие люди"
              }
            }
          },
          "sign_order": {
            "type": "object",
            "description": "Порядок подписи",
            "required": [
              "title",
              "value"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Название порядка подписи",
                "example": "Обе стороны"
              },
              "value": {
                "type": "string",
                "description": "Значение порядка подписи",
                "example": "arbitrary"
              }
            }
          },
          "manager_contractor": {
            "type": "object",
            "nullable": true,
            "description": "Руководитель",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Идентификатор руководителя",
                "example": 1
              },
              "short_name": {
                "type": "string",
                "description": "Полное имя руководителя",
                "example": "Константинопольский К. К."
              }
            }
          }
        }
      },
      "PaginationMeta": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "from": {
            "type": "number"
          },
          "to": {
            "type": "number"
          },
          "per_page": {
            "type": "number",
            "enum": [
              1,
              2,
              3,
              4,
              5,
              10,
              15,
              20,
              25,
              30,
              50,
              100,
              150,
              200
            ],
            "example": 30,
            "minimum": 0,
            "maximum": 200,
            "default": 20,
            "readOnly": true
          },
          "current_page": {
            "type": "number"
          },
          "last_page": {
            "type": "number"
          }
        },
        "example": {
          "total": 1,
          "from": 1,
          "to": 1,
          "per_page": 20,
          "current_page": 1,
          "last_page": 1
        }
      },
      "PaginationLinks": {
        "type": "object",
        "example": {
          "path": "string",
          "first_page_url": "string",
          "last_page_url": "string",
          "next_page_url": null,
          "prev_page_url": null
        },
        "properties": {
          "path": {
            "type": "string"
          },
          "first_page_url": {
            "type": "string"
          },
          "last_page_url": {
            "type": "string"
          },
          "next_page_url": {
            "type": "string",
            "nullable": true
          },
          "prev_page_url": {
            "type": "string",
            "nullable": true
          }
        },
        "x-examples": {}
      },
      "DictionaryItem": {
        "type": "object",
        "description": "Объект словаря",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "integer"
                },
                "title": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "name": "sbp_banks",
          "title": "Банки для системы быстрых платежей",
          "options": [
            {
              "value": 100000000004,
              "title": "Тинькофф Банк"
            }
          ]
        }
      },
      "DocumentType": {
        "title": "DocumentType",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД типа документа"
          },
          "name": {
            "type": "string",
            "description": "Название типа документа"
          },
          "document_series": {
            "type": "string",
            "description": "Название серии документов этого типа. Используется при генерации номеров документов",
            "maxLength": 15,
            "nullable": true
          },
          "document_code": {
            "type": "string",
            "description": "Название кода документов этого типа",
            "maxLength": 10,
            "nullable": true
          },
          "is_cancellable": {
            "type": "boolean",
            "description": "Можно ли аннулировать документы этого типа",
            "default": false
          },
          "company_id": {
            "type": "integer",
            "description": "ИД компании"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Статус удаления"
          }
        },
        "required": [
          "id",
          "name",
          "document_series",
          "document_code",
          "is_cancellable",
          "company_id",
          "is_deleted"
        ],
        "description": "Тип документа"
      },
      "VacationKind": {
        "title": "Вид отпуска",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД вида отпуска"
          },
          "name": {
            "type": "string",
            "description": "Название вида отпуска"
          },
          "company_id": {
            "type": "integer",
            "description": "ИД компании, в рамках которой существует этот вид отпуска"
          }
        },
        "required": [
          "id",
          "name",
          "company_id"
        ]
      },
      "Vacation": {
        "title": "Отпуск штатного сотрудника",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД отпуска"
          },
          "company_id": {
            "type": "integer",
            "description": "ИД компании"
          },
          "employee_id": {
            "type": "integer",
            "description": "ИД штатного сотрудника"
          },
          "agent": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД юридического лица"
              },
              "name": {
                "type": "string",
                "description": "Наименование юридического лица"
              }
            },
            "required": [
              "id"
            ]
          },
          "department": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД отдела"
              },
              "name": {
                "type": "string",
                "description": "Название отдела"
              }
            },
            "required": [
              "id"
            ]
          },
          "position": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД должности"
              },
              "name": {
                "type": "string",
                "description": "Название должности"
              }
            },
            "required": [
              "id"
            ]
          },
          "vacation_kind": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ИД вида отпуска"
              },
              "name": {
                "type": "string",
                "description": "Название вида отпуска"
              }
            },
            "required": [
              "id"
            ]
          },
          "date_from": {
            "type": "string",
            "format": "date",
            "description": "Дата начала отпуска"
          },
          "date_to": {
            "type": "string",
            "format": "date",
            "description": "Дата окончания отпуска"
          },
          "vacation_days": {
            "type": "integer",
            "description": "Количество календарных дней за период отпуска"
          }
        },
        "required": [
          "id",
          "company_id",
          "agent",
          "department",
          "position",
          "vacation_kind",
          "employee_id",
          "date_from",
          "date_to",
          "vacation_days"
        ]
      },
      "Candidate": {
        "title": "Кандидат",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД кандидата"
          },
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона"
          },
          "email": {
            "type": "string",
            "description": "E-mail"
          },
          "employee_id": {
            "type": "integer",
            "description": "ИД связанного штатного сотрудника"
          },
          "status": {
            "$ref": "#/components/schemas/CandidateStatus"
          },
          "company": {
            "$ref": "#/components/schemas/CandidateCompany"
          },
          "workplaces": {
            "type": "array",
            "description": "Список мест работы, на которые устраивается кандидат",
            "items": {
              "$ref": "#/components/schemas/CandidateWorkplace"
            }
          },
          "checklist": {
            "$ref": "#/components/schemas/CandidateChecklist"
          },
          "questionnaire": {
            "$ref": "#/components/schemas/Questionnaire"
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name",
          "middle_name",
          "phone",
          "email",
          "employee_id"
        ]
      },
      "CandidateStatus": {
        "title": "Статус кандидата",
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Значение статуса"
          },
          "title": {
            "type": "string",
            "description": "Название статуса"
          }
        },
        "required": [
          "value",
          "title"
        ]
      },
      "CandidateCompany": {
        "title": "Компания",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД компании"
          }
        },
        "required": [
          "id"
        ]
      },
      "CandidateWorkplace": {
        "title": "Место работы, на которое устраивается кандидат",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД места работы"
          },
          "agent": {
            "$ref": "#/components/schemas/CandidateWorkplaceAgent"
          },
          "department": {
            "$ref": "#/components/schemas/CandidateWorkplaceDepartment"
          },
          "position": {
            "$ref": "#/components/schemas/CandidateWorkplacePosition"
          },
          "employment_date": {
            "type": "string",
            "description": "Дата выхода на работу",
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "agent",
          "department",
          "position",
          "employment_date"
        ]
      },
      "CandidateWorkplaceAgent": {
        "title": "Юр.лицо",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД юр.лица"
          },
          "name": {
            "type": "string",
            "description": "Название юр.лица"
          }
        },
        "required": [
          "id"
        ]
      },
      "CandidateWorkplaceDepartment": {
        "title": "Отдел юр.лица",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД отдела"
          },
          "name": {
            "type": "string",
            "description": "Название отдела"
          }
        },
        "required": [
          "id"
        ]
      },
      "CandidateWorkplacePosition": {
        "title": "Должность",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД должности"
          },
          "name": {
            "type": "string",
            "description": "Название должности"
          }
        },
        "required": [
          "id"
        ]
      },
      "CandidateChecklist": {
        "title": "Чек-лист кандидата",
        "type": "object",
        "properties": {
          "initial_data_filled": {
            "type": "boolean",
            "description": "Личные данные и место работы заполнено"
          },
          "questionnaire_sent": {
            "type": "boolean",
            "description": "Анкета отправлена кандидату"
          },
          "questionnaire_filled": {
            "type": "boolean",
            "description": "Анкета заполнена"
          },
          "employed": {
            "type": "boolean",
            "description": "Трудоустроен"
          }
        },
        "required": [
          "initial_data_filled",
          "questionnaire_sent",
          "questionnaire_filled",
          "employed"
        ]
      },
      "Questionnaire": {
        "title": "Анкета кандидата",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД анкеты"
          },
          "company": {
            "$ref": "#/components/schemas/CandidateCompany"
          },
          "candidate": {
            "$ref": "#/components/schemas/CandidateShort"
          },
          "status": {
            "$ref": "#/components/schemas/QuestionnaireStatus"
          },
          "personal_data_processing_consent": {
            "$ref": "#/components/schemas/QuestionnairePersonalDataProcessingConsent"
          },
          "requested_documents": {
            "type": "array",
            "description": "Список запрошенных документов",
            "items": {
              "$ref": "#/components/schemas/QuestionnaireRequestedDocument"
            }
          },
          "requested_personal_data": {
            "type": "array",
            "description": "Список запрошенных персональных данных",
            "items": {
              "$ref": "#/components/schemas/QuestionnaireRequestedPersonalDataItem"
            }
          },
          "eqes_issue_consent": {
            "$ref": "#/components/schemas/QuestionnaireEqesIssueConsent"
          },
          "eqes_issue_application": {
            "$ref": "#/components/schemas/QuestionnaireEqesIssueApplication"
          },
          "checklist": {
            "$ref": "#/components/schemas/QuestionnaireChecklist"
          }
        },
        "required": [
          "id"
        ]
      },
      "CandidateShort": {
        "title": "Сокращенные данные кандидата",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД кандидата"
          }
        },
        "required": [
          "id"
        ]
      },
      "QuestionnaireStatus": {
        "title": "Статус анкеты кандидата",
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Значение статуса"
          },
          "title": {
            "type": "string",
            "description": "Название статуса"
          }
        },
        "required": [
          "value",
          "title"
        ]
      },
      "QuestionnairePersonalDataProcessingConsent": {
        "title": "Соглашение о обработке персональных данных",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД соглашения"
          },
          "document_id": {
            "type": "integer",
            "description": "ИД документа",
            "nullable": true
          },
          "is_signed": {
            "type": "boolean",
            "description": "Состояние подписи соглашения"
          }
        },
        "required": [
          "id",
          "document_id",
          "is_signed"
        ]
      },
      "QuestionnaireRequestedDocument": {
        "title": "Запрошенный документ",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionnaireRequestedDocumentType"
            }
          },
          "selected_type_code": {
            "type": "string",
            "nullable": true
          },
          "is_required": {
            "type": "boolean"
          },
          "skip_reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionnaireRequestedDocumentSkipReason"
            }
          },
          "selected_skip_reason_code": {
            "type": "string",
            "nullable": true
          },
          "requested_files": {
            "$ref": "#/components/schemas/QuestionnaireRequestedFileCollection"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "types",
          "selected_type_code",
          "is_required",
          "skip_reasons",
          "selected_skip_reason_code"
        ]
      },
      "QuestionnaireRequestedDocumentType": {
        "title": "Тип запрашиваемого документа",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Название типа документа"
          },
          "code": {
            "type": "string",
            "description": "Код типа документа"
          }
        },
        "required": [
          "title",
          "code"
        ]
      },
      "QuestionnaireRequestedDocumentSkipReason": {
        "title": "Причина непредоставления запрошенного документа",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Название причины"
          },
          "code": {
            "type": "string",
            "description": "Код причины"
          }
        },
        "required": [
          "title",
          "code"
        ]
      },
      "QuestionnaireRequestedFileCollection": {
        "title": "Коллекция запрошенных файлов",
        "type": "object",
        "properties": {
          "can_candidate_add_files": {
            "type": "boolean",
            "description": "Может ли кандидат добавлять новые файлы в коллекцию"
          },
          "files": {
            "type": "array",
            "description": "Список файлов",
            "items": {
              "$ref": "#/components/schemas/QuestionnaireRequestedFile"
            }
          }
        },
        "required": [
          "can_candidate_add_files",
          "files"
        ]
      },
      "QuestionnaireRequestedFile": {
        "title": "Запрошенный файл",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД файла"
          },
          "title": {
            "type": "string",
            "description": "Название файла",
            "nullable": true
          },
          "file_name": {
            "type": "string",
            "description": "Название загруженного файла",
            "nullable": true
          },
          "is_permanent": {
            "type": "boolean",
            "description": "Удаляется ли файл из коллекции или просто очищается"
          },
          "is_uploaded": {
            "type": "boolean",
            "description": "Был ли физический файл загружен"
          }
        },
        "required": [
          "id",
          "title",
          "file_name",
          "is_permanent",
          "is_uploaded"
        ]
      },
      "QuestionnaireRequestedPersonalDataItem": {
        "title": "Элемент списка запрошенной персональной информации кандидата",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД элемента"
          },
          "title": {
            "type": "string",
            "description": "Название"
          },
          "type": {
            "type": "string",
            "enum": [
              "string",
              "text",
              "inn",
              "snils",
              "date",
              "department_code",
              "passport_number",
              "phone",
              "email",
              "gender"
            ],
            "description": "Тип"
          },
          "code": {
            "type": "string",
            "description": "Код, явно идентифицирующий вид персональных данных. Например, дату рождения"
          },
          "value": {
            "type": "string",
            "description": "Значение, введенное кандидатом",
            "nullable": true
          },
          "is_required": {
            "type": "boolean",
            "description": "Обязательно ли для заполнения"
          }
        },
        "required": [
          "id",
          "title",
          "type",
          "code",
          "value",
          "is_required"
        ]
      },
      "QuestionnaireEqesIssueConsent": {
        "title": "Соглашение о передаче персональных данных",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД соглашения"
          },
          "document_id": {
            "type": "integer",
            "description": "ИД документа",
            "nullable": true
          },
          "is_signed": {
            "type": "boolean",
            "description": "Состояние подписи соглашения"
          }
        },
        "required": [
          "id",
          "document_id",
          "is_signed"
        ]
      },
      "QuestionnaireEqesIssueApplication": {
        "title": "Заявление на выпуск УНЭП",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД заявления"
          },
          "document_id": {
            "type": "integer",
            "description": "ИД документа",
            "nullable": true
          },
          "is_signed": {
            "type": "boolean",
            "description": "Состояние подписи соглашения"
          }
        },
        "required": [
          "id",
          "document_id",
          "is_signed"
        ]
      },
      "QuestionnaireChecklist": {
        "title": "Чек-лист анкеты",
        "type": "object",
        "properties": {
          "created": {
            "type": "boolean",
            "description": "Анкета создана"
          },
          "sent_to_candidate": {
            "type": "boolean",
            "description": "Анкета отправлена кандидату"
          },
          "personal_data_processing_consent_signed": {
            "type": "boolean",
            "description": "Согласие на обработку персональных данных подписано"
          },
          "eqes_issue_consent_signed": {
            "type": "boolean",
            "description": "Согласие на выпуск УНЭП подписано"
          },
          "requested_documents_collection_completed": {
            "type": "boolean",
            "description": "Сбор запрошенных документов завершен"
          },
          "requested_personal_data_collection_completed": {
            "type": "boolean",
            "description": "Сбор персональных данных завершен"
          },
          "eqes_issue_application_signed": {
            "type": "boolean",
            "description": "Заявление на выпуск УНЭП подписано"
          }
        },
        "required": [
          "created",
          "sent_to_candidate",
          "personal_data_processing_consent_signed",
          "eqes_issue_consent_signed",
          "requested_documents_collection_completed",
          "requested_personal_data_collection_completed",
          "eqes_issue_application_signed"
        ]
      },
      "Department": {
        "title": "Department",
        "type": "object",
        "description": "Отдел юрлица",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД отдела"
          },
          "name": {
            "type": "string",
            "description": "Название отдела"
          },
          "agent": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "description": "Юрлицо",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД юрлица"
              },
              "name": {
                "type": "string",
                "description": "Название юрлица"
              }
            }
          },
          "parent_id": {
            "type": "integer",
            "description": "ИД отдела родителя",
            "nullable": true
          },
          "is_root": {
            "type": "boolean",
            "description": "Признак корневого отдела"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Статус удаления"
          }
        },
        "required": [
          "id",
          "name",
          "agent",
          "parent_id",
          "is_root",
          "is_deleted"
        ]
      },
      "Position": {
        "title": "Position",
        "type": "object",
        "description": "Должность",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД должности"
          },
          "name": {
            "type": "string",
            "description": "Название должности"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Статус удаления"
          }
        },
        "required": [
          "id",
          "name",
          "is_deleted"
        ]
      },
      "Employee": {
        "title": "Employee",
        "type": "object",
        "description": "Штатный сотрудник",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор штатного сотрудника"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона штатного сотрудника в формате +7**********",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Адрес электронной почты штатного сотрудника",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия штатного сотрудника"
          },
          "first_name": {
            "type": "string",
            "description": "Имя штатного сотрудника"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество штатного сотрудника",
            "nullable": true
          },
          "avatar": {
            "type": "object",
            "required": [
              "normal",
              "url",
              "overlay"
            ],
            "description": "Информация о аватаре сотрудника",
            "properties": {
              "normal": {
                "type": "string",
                "description": "Ссылка на аватар сотрудника"
              },
              "url": {
                "type": "string",
                "description": "Ссылка на аватар сотрудника"
              },
              "overlay": {
                "type": "boolean"
              }
            }
          },
          "inn": {
            "type": "string",
            "description": "ИНН штатного сотрудника",
            "nullable": true
          },
          "group": {
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "description": "Группа сотрудника",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД группы"
              },
              "name": {
                "type": "string",
                "description": "Название группы"
              }
            }
          },
          "is_employee": {
            "type": "boolean",
            "description": "Является штатным сотрудником"
          },
          "legal_form": {
            "type": "object",
            "description": "Правовая форма штатного сотрудника",
            "required": [
              "id",
              "title"
            ],
            "properties": {
              "id": {
                "type": "number",
                "description": "Идентификатор правовой формы штатного сотрудника"
              },
              "title": {
                "type": "string",
                "description": "Название правовой формы штатного сотрудника",
                "nullable": true
              }
            }
          },
          "identification": {
            "type": "object",
            "description": "Идентификация штатного сотрудника",
            "required": [
              "value",
              "identified_at"
            ],
            "properties": {
              "value": {
                "type": "boolean",
                "description": "Идентификация пройдена штатным сотрудником"
              },
              "identified_at": {
                "type": "string",
                "format": "date-time",
                "description": "Дата и время прохождения идентификации штутаным сотрудником в ISO",
                "nullable": true
              }
            }
          },
          "citizenship": {
            "type": "object",
            "required": [
              "value",
              "title"
            ],
            "description": "Гражданство сотрудника",
            "nullable": true,
            "properties": {
              "value": {
                "type": "string",
                "description": "Код страны (ISO 3166-1 Alpha-3)"
              },
              "title": {
                "type": "string",
                "description": "Название"
              }
            }
          },
          "workplaces": {
            "type": "array",
            "description": "Рабочие места штатного сотрудника",
            "items": {
              "$ref": "#/components/schemas/EmployeeWorkplace"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания в ISO"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Дата обновления в ISO",
            "nullable": true
          }
        },
        "required": [
          "id",
          "phone",
          "email",
          "last_name",
          "first_name",
          "middle_name",
          "avatar",
          "inn",
          "group",
          "is_employee",
          "legal_form",
          "identification",
          "citizenship",
          "created_at",
          "updated_at"
        ]
      },
      "EmployeeWorkplace": {
        "title": "EmployeeWorkplace",
        "type": "object",
        "description": "Рабочее место штатного сотрудника",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Уникальный идентификатор рабочего места штатного сотрудника"
          },
          "agent": {
            "type": "object",
            "nullable": true,
            "description": "Юрлицо в которое устроен штатный сотрудник",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Уникальный идентификатор юрлица"
              },
              "name": {
                "type": "string",
                "description": "Название юрлица"
              }
            }
          },
          "department": {
            "type": "object",
            "nullable": true,
            "description": "Отдел в который устроен штатный сотрудник",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Уникальный идентификатор отдела"
              },
              "name": {
                "type": "string",
                "description": "Название отдела"
              }
            }
          },
          "position": {
            "type": "object",
            "nullable": true,
            "description": "Должность, на которую устроен штатный сотрудник",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Уникальный идентификатор должности"
              },
              "name": {
                "type": "string",
                "description": "Название должности"
              }
            }
          },
          "can_sign_as_manager": {
            "type": "boolean",
            "description": "Может ли сотрудник подписывать документы от лица компании"
          },
          "employment_date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата принятия на работу  в ISO"
          },
          "dismissal_date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата уволниения с места работы в ISO",
            "nullable": true
          }
        },
        "required": [
          "id",
          "agent",
          "department",
          "position",
          "can_sign_as_manager",
          "employment_date",
          "dismissal_date"
        ]
      },
      "DocumentForGenerate": {
        "type": "object",
        "title": "DocumentForGenerate",
        "description": "Данные для создания документа из шаблона",
        "properties": {
          "agent_id": {
            "type": "integer",
            "description": "ИД юр.лица"
          },
          "template_id": {
            "type": "integer",
            "description": "ИД шаблона документа"
          },
          "name": {
            "type": "string",
            "description": "Название документа",
            "maxLength": 512
          },
          "code": {
            "type": "string",
            "description": "Код документа",
            "maxLength": 10
          },
          "document_type_id": {
            "type": "integer",
            "description": "ИД типа документа"
          },
          "manual_series": {
            "type": "string",
            "maxLength": 255,
            "description": "Серия документа"
          },
          "manual_number": {
            "type": "string",
            "maxLength": 255,
            "description": "Номер документа"
          },
          "date": {
            "type": "string",
            "maxLength": 50,
            "description": "Дата в документе в произвольной форме",
            "nullable": true
          },
          "author_id": {
            "type": "integer",
            "description": "ИД создателя документа"
          },
          "author_position_id": {
            "type": "integer",
            "description": "ИД должности автора документа",
            "nullable": true
          },
          "signature_deadline": {
            "type": "string",
            "format": "date",
            "description": "Дедлайн подписания документа",
            "nullable": true
          },
          "substitutions": {
            "type": "array",
            "description": "Список полей, заполненных пользователем с формы подачи заявления",
            "items": {
              "$ref": "#/components/schemas/DocumentSubstitution"
            }
          },
          "stages": {
            "type": "array",
            "description": "Этапы документа",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DocumentApprovalStageForCreate"
                },
                {
                  "$ref": "#/components/schemas/DocumentSigningStageForCreate"
                }
              ]
            }
          }
        },
        "required": [
          "company_id",
          "author_id",
          "agent_id",
          "template_id",
          "name",
          "document_type_id",
          "stages"
        ]
      },
      "DocumentSigningStageForCreate": {
        "title": "DocumentSigningStageForCreate",
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "description": "Порядок этапа"
          },
          "type": {
            "$ref": "#/components/schemas/RouteStageTypeEnum"
          },
          "signing_logic": {
            "$ref": "#/components/schemas/RouteSigningLogicEnum"
          },
          "signers": {
            "type": "array",
            "description": "Список подписантов",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DocumentContractorSignerForCreate"
                },
                {
                  "$ref": "#/components/schemas/DocumentDepartmentSignerForCreate"
                }
              ]
            }
          }
        },
        "required": [
          "order",
          "type",
          "signing_logic",
          "signers"
        ]
      },
      "DocumentBaseResponse": {
        "type": "object",
        "properties": {
          "item": {
            "type": "object"
          }
        }
      },
      "DocumentContractorSignerForCreate": {
        "title": "DocumentContractorSignerForCreate",
        "type": "object",
        "description": "Сотрудник",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RouteSignerTypeEnum"
          },
          "id": {
            "type": "integer",
            "description": "ИД сотрудника"
          },
          "position_id": {
            "type": "integer",
            "description": "ИД должности сотрудника",
            "nullable": true
          },
          "role": {
            "$ref": "#/components/schemas/RouteSignerRoleEnum"
          }
        },
        "required": [
          "type",
          "id",
          "position_id",
          "role"
        ]
      },
      "RouteSignerRoleEnum": {
        "title": "RouteSignerRoleEnum",
        "type": "string",
        "description": "Роль подписанта",
        "enum": [
          "employee",
          "manager"
        ]
      },
      "RouteSignerTypeEnum": {
        "title": "RouteSignerTypeEnum",
        "type": "string",
        "description": "Тип подписанта",
        "enum": [
          "contractor",
          "department"
        ]
      },
      "RouteSigningLogicEnum": {
        "title": "RouteSigningLogicEnum",
        "type": "string",
        "description": "Тип логики подписания",
        "enum": [
          "all",
          "any"
        ]
      },
      "DocumentDepartmentSignerForCreate": {
        "title": "v1.DocumentDepartmentSignerForCreate",
        "type": "object",
        "description": "Отдел",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RouteSignerTypeEnum"
          },
          "id": {
            "type": "integer",
            "description": "ИД отдела"
          },
          "signing_logic": {
            "$ref": "#/components/schemas/RouteSigningLogicEnum"
          }
        },
        "required": [
          "type",
          "id",
          "signing_logic"
        ]
      },
      "DocumentApprovalStageForCreate": {
        "title": "DocumentApprovalStageForCreate",
        "type": "object",
        "properties": {
          "order": {
            "type": "integer",
            "description": "Порядок этапа"
          },
          "type": {
            "$ref": "#/components/schemas/RouteStageTypeEnum"
          },
          "approval_logic": {
            "$ref": "#/components/schemas/RouteApprovalLogicEnum"
          },
          "approvers": {
            "type": "array",
            "description": "Список согласующих",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DocumentContractorApproverForCreate"
                },
                {
                  "$ref": "#/components/schemas/DocumentDepartmentApproverForCreate"
                }
              ]
            }
          }
        },
        "required": [
          "order",
          "type",
          "approval_logic",
          "approvers"
        ]
      },
      "RouteApproverTypeEnum": {
        "title": "RouteApproverTypeEnum",
        "type": "string",
        "description": "Тип согласующего",
        "enum": [
          "contractor",
          "department"
        ]
      },
      "DocumentDepartmentApproverForCreate": {
        "title": "DocumentDepartmentApproverForCreate",
        "type": "object",
        "description": "Отдел",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RouteApproverTypeEnum"
          },
          "id": {
            "type": "integer",
            "description": "ИД отдела"
          },
          "approval_logic": {
            "$ref": "#/components/schemas/RouteApprovalLogicEnum"
          }
        },
        "required": [
          "type",
          "id",
          "approval_logic"
        ]
      },
      "RouteApprovalLogicEnum": {
        "title": "RouteApprovalLogicEnum",
        "type": "string",
        "description": "Тип логики согласования",
        "enum": [
          "all",
          "any"
        ]
      },
      "DocumentContractorApproverForCreate": {
        "title": "DocumentContractorApproverForCreate",
        "type": "object",
        "description": "Сотрудник",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RouteApproverTypeEnum"
          },
          "id": {
            "type": "integer",
            "description": "ИД сотрудника"
          },
          "position_id": {
            "type": "integer",
            "description": "ИД должности сотрудника",
            "nullable": true
          }
        },
        "required": [
          "type",
          "id",
          "position_id"
        ]
      },
      "RouteStageTypeEnum": {
        "title": "RouteStageTypeEnum",
        "type": "string",
        "description": "Тип этапа маршрута",
        "enum": [
          "approval",
          "signing"
        ]
      },
      "DocumentSubstitution": {
        "type": "object",
        "description": "Какое значение должно подставляться в плейсхолдер (атрибут placeholder_code) при генерации заявления по шаблону",
        "properties": {
          "placeholder_code": {
            "type": "string",
            "description": "Код прейсхолдера"
          },
          "value": {
            "type": "string",
            "description": "Подставляемое значение"
          }
        },
        "required": [
          "placeholder_code",
          "type",
          "title",
          "description",
          "value"
        ]
      },
      "Document": {
        "type": "object",
        "title": "Document",
        "description": "Документ",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД документа"
          },
          "external_id": {
            "type": "string",
            "description": "Внешний идентификатор (произвольной формы)",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Название документа"
          },
          "manual_series": {
            "type": "string",
            "description": "Серия документа",
            "nullable": true
          },
          "manual_number": {
            "type": "string",
            "description": "Номер документа",
            "nullable": true
          },
          "series": {
            "type": "string",
            "description": "Серия документа",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Номер документа",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Дата в документе (произвольный формат)",
            "nullable": true
          },
          "hash": {
            "type": "string",
            "description": "Хэш документа"
          },
          "company": {
            "type": "object",
            "description": "Компания",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД компании"
              }
            }
          },
          "agent": {
            "type": "object",
            "description": "Юрлицо",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД юрлица"
              },
              "name": {
                "type": "string",
                "description": "Название юрлица",
                "nullable": true
              }
            }
          },
          "document_type": {
            "type": "object",
            "description": "Тип документа",
            "required": [
              "id",
              "name"
            ],
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД типа документа"
              },
              "name": {
                "type": "string",
                "description": "Название типа документа"
              }
            }
          },
          "author": {
            "type": "object",
            "description": "Автор документа",
            "required": [
              "id",
              "name",
              "position"
            ],
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД автора документа"
              },
              "name": {
                "type": "string",
                "description": "Имя автора документа"
              },
              "position": {
                "type": "object",
                "description": "Должность автора документа",
                "required": [
                  "id",
                  "name"
                ],
                "nullable": true,
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "ИД должности автора документа"
                  },
                  "name": {
                    "type": "string",
                    "description": "Имя должности автора документа"
                  }
                }
              }
            }
          },
          "sign_order": {
            "type": "object",
            "description": "Порядок подписания",
            "required": [
              "value",
              "name"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/DocumentSignOrderEnum"
              },
              "name": {
                "type": "string",
                "description": "Название порядка подписания"
              }
            }
          },
          "status": {
            "type": "object",
            "description": "Статус документа",
            "required": [
              "value",
              "name"
            ],
            "properties": {
              "value": {
                "$ref": "#/components/schemas/DocumentStatusEnum"
              },
              "name": {
                "type": "string",
                "description": "Названия статуса документа"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Дата создания документа"
          },
          "manager_signatures": {
            "type": "array",
            "description": "Список подписей руководителей",
            "items": {
              "$ref": "#/components/schemas/Signature"
            }
          },
          "employee_signatures": {
            "type": "array",
            "description": "Список подписей сотрудников",
            "items": {
              "$ref": "#/components/schemas/Signature"
            }
          },
          "signature_deadline": {
            "type": "string",
            "description": "Дедлайн подписания документа",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "external_id",
          "name",
          "date",
          "hash",
          "company",
          "agent",
          "document_type",
          "author",
          "sign_order",
          "status",
          "created_at",
          "manager_signatures",
          "employee_signatures"
        ]
      },
      "Signature": {
        "type": "object",
        "title": "Signature",
        "description": "Подпись документа",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ИД подписи документа"
          },
          "signed_at": {
            "type": "string",
            "format": "date-time",
            "description": "Дата подписания",
            "nullable": true
          },
          "user": {
            "type": "object",
            "required": [
              "id",
              "full_name",
              "short_name",
              "phone",
              "role",
              "position"
            ],
            "description": "Пользователь подписант",
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД пользователя"
              },
              "full_name": {
                "type": "string",
                "description": "Полное имя пользователя"
              },
              "short_name": {
                "type": "string",
                "description": "Краткое имя пользователя"
              },
              "phone": {
                "type": "string",
                "description": "Номер телефона пользователя",
                "nullable": true
              },
              "role": {
                "type": "string",
                "enum": [
                  "employee",
                  "manager"
                ],
                "description": "Роль пользователя в контексте данной подписи"
              },
              "position": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "description": "Должность пользователя",
                "nullable": true,
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "ИД должности пользователя"
                  },
                  "name": {
                    "type": "string",
                    "description": "Название должности пользователя"
                  }
                }
              }
            }
          },
          "status": {
            "type": "object",
            "required": [
              "value",
              "name"
            ],
            "description": "Статус подписи",
            "properties": {
              "value": {
                "$ref": "#/components/schemas/SignatureStatusEnum"
              },
              "name": {
                "type": "string",
                "description": "Название статуса подписи документа"
              }
            }
          },
          "provider": {
            "type": "object",
            "required": [
              "value",
              "name"
            ],
            "description": "Провайдер подписи",
            "nullable": true,
            "properties": {
              "value": {
                "$ref": "#/components/schemas/SignatureProviderEnum"
              },
              "name": {
                "type": "string",
                "description": "Название провайдера подписи"
              }
            }
          },
          "reject_reason": {
            "type": "string",
            "description": "Причина отказа подписи",
            "nullable": true
          },
          "rejected_at": {
            "type": "string",
            "description": "Дата отказа подписи",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "signed_at",
          "user",
          "status",
          "provider",
          "reject_reason",
          "rejected_at"
        ]
      },
      "EmployeeStatementTemplate": {
        "type": "object",
        "description": "Шаблон заявления",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД шаблона заявления"
          },
          "company": {
            "required": [
              "id"
            ],
            "type": "object",
            "description": "Компания к которой относится шаблон заявления",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД компании"
              }
            }
          },
          "agent": {
            "required": [
              "id"
            ],
            "type": "object",
            "description": "Юр.лицо к которому относится шаблон заявления",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД юр.лица"
              },
              "name": {
                "type": "string",
                "description": "Название юр.лица"
              }
            }
          },
          "group": {
            "required": [
              "id"
            ],
            "type": "object",
            "description": "Раздел к которому относится шаблон заявления",
            "properties": {
              "id": {
                "type": "string",
                "description": "ИД раздела"
              },
              "name": {
                "type": "string",
                "description": "Название раздела"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Название шаблона заявления"
          },
          "description": {
            "type": "string",
            "description": "Описание шаблона заявления"
          },
          "enable_author_comment": {
            "type": "boolean",
            "description": "Разрешено ли автору оставлять комментарий при подаче заявления"
          },
          "attachment_settings": {
            "type": "object",
            "description": "Настройки прикрепляемых файлов",
            "required": [
              "attachments_enabled",
              "attachments_description"
            ],
            "properties": {
              "attachments_enabled": {
                "type": "boolean",
                "description": "Разрешено или запрещено прикреплять файлы"
              },
              "attachments_description": {
                "type": "string",
                "description": "Описание для загружаемых файлов",
                "nullable": true
              }
            }
          },
          "placeholders": {
            "type": "array",
            "description": "Список плейсхолдеров шаблона заявления",
            "items": {
              "$ref": "#/components/schemas/EmployeeStatementTemplatePlaceholder"
            }
          }
        },
        "required": [
          "id",
          "company",
          "agent",
          "group",
          "name",
          "description",
          "enable_author_comment",
          "attachment_settings"
        ]
      },
      "EmployeeStatementTemplatePlaceholder": {
        "type": "object",
        "description": "Плейсхолдеры, которые могут присутствовать в файле шаблона заявления",
        "properties": {
          "code": {
            "type": "string",
            "description": "Код плейсхолдера"
          },
          "type": {
            "type": "string",
            "enum": [
              "input",
              "text",
              "date",
              "date_rage",
              "number"
            ],
            "description": "Тип плейсхолдера"
          },
          "title": {
            "type": "string",
            "description": "Заголовок плейсхолдера"
          },
          "description": {
            "type": "string",
            "description": "Описание плейсхолдера"
          }
        },
        "required": [
          "code",
          "type",
          "title",
          "description"
        ]
      },
      "EmployeeStatement": {
        "type": "object",
        "description": "Заявление",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД заявления"
          },
          "company": {
            "type": "object",
            "description": "Компания к которой относится заявление",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД компании"
              }
            }
          },
          "agent": {
            "type": "object",
            "description": "Юр.лицо к которому относится заявление",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД юр.лица"
              },
              "name": {
                "type": "string",
                "description": "Название юр.лица"
              }
            }
          },
          "group": {
            "type": "object",
            "description": "Раздел к которому относится заявление",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "ИД раздела"
              },
              "name": {
                "type": "string",
                "description": "Название раздела"
              }
            }
          },
          "template": {
            "type": "object",
            "description": "Шаблон на основе которого было создано заявление",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "ИД шаблона"
              },
              "name": {
                "type": "string",
                "description": "Название шаблона"
              }
            }
          },
          "document": {
            "type": "object",
            "description": "Документ который связан с текущим заявлением",
            "required": [
              "id"
            ],
            "nullable": true,
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД документа"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "Название заявления"
          },
          "rejector_comment": {
            "type": "string",
            "description": "Комментарий отклонившего заявление"
          },
          "author": {
            "type": "object",
            "description": "Автор заявления",
            "required": [
              "id",
              "first_name",
              "last_name",
              "middle_name",
              "phone",
              "position"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД сотрудника"
              },
              "first_name": {
                "type": "string",
                "description": "Имя сотрудника"
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия сотрудника"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество сотрудника",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "description": "Номер телефона сотрудника",
                "nullable": true
              },
              "position": {
                "type": "object",
                "description": "Должность",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "ИД должности"
                  },
                  "name": {
                    "type": "string",
                    "description": "Название должности"
                  }
                }
              }
            }
          },
          "author_comment": {
            "type": "string",
            "description": "Комментарий автора заявления"
          },
          "status": {
            "type": "object",
            "description": "Статус заявления",
            "required": [
              "title",
              "value"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Название статуса"
              },
              "value": {
                "type": "string",
                "description": "Значение статуса"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "datetime",
            "description": "Дата подачи заявления"
          },
          "substitutions": {
            "type": "array",
            "description": "Список полей, заполненных пользователем с формы подачи заявления",
            "items": {
              "$ref": "#/components/schemas/EmployeeStatementSubstitution"
            }
          },
          "approval_stages": {
            "type": "array",
            "description": "Список этапов согласований заявления",
            "items": {
              "$ref": "#/components/schemas/EmployeeStatementApprovalStage"
            }
          },
          "attachment_settings": {
            "type": "object",
            "description": "Настройки прикрепляемых файлов",
            "required": [
              "attachments_enabled",
              "attachments_description"
            ],
            "properties": {
              "attachments_enabled": {
                "type": "boolean",
                "description": "Разрешено или запрещено прикреплять файлы"
              },
              "attachments_description": {
                "type": "string",
                "description": "Описание для загружаемых файлов",
                "nullable": true
              }
            }
          },
          "attachments": {
            "type": "array",
            "description": "Список вложений заявления",
            "items": {
              "$ref": "#/components/schemas/EmployeeStatementAttachment"
            }
          }
        },
        "required": [
          "id",
          "company",
          "agent",
          "group",
          "template",
          "document",
          "name",
          "rejector_comment",
          "author",
          "author_comment",
          "status",
          "created_at",
          "attachment_settings",
          "attachments"
        ]
      },
      "EmployeeStatementSubstitution": {
        "type": "object",
        "description": "Какое значение должно подставляться в плейсхолдер (аттрибут placeholder_code) при генерации заявления по шаблону",
        "properties": {
          "placeholder_code": {
            "type": "string",
            "description": "Код прейсхолдера"
          },
          "type": {
            "type": "string",
            "description": "Тип контрола, используемый для ввода значения",
            "enum": [
              "input",
              "text",
              "date",
              "date_rage",
              "number"
            ]
          },
          "title": {
            "type": "string",
            "description": "Название поля"
          },
          "description": {
            "type": "string",
            "description": "Описание поля"
          },
          "value": {
            "type": "string",
            "description": "Подставляемое значение"
          },
          "detail_value": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmployeeStatementSubstitutionDateDetailValue"
              },
              {
                "$ref": "#/components/schemas/EmployeeStatementSubstitutionDateRangeDetailValue"
              },
              {
                "$ref": "#/components/schemas/EmployeeStatementSubstitutionNumberDetailValue"
              },
              {
                "$ref": "#/components/schemas/EmployeeStatementSubstitutionStringDetailValue"
              }
            ]
          }
        },
        "required": [
          "placeholder_code",
          "type",
          "title",
          "description",
          "value",
          "detail_value"
        ]
      },
      "EmployeeStatementSubstitutionDateDetailValue": {
        "title": "SubstitutionDateDetailValue",
        "type": "object",
        "description": "Подробные данные по значению даты. Может отсутствовать, если не получится распарсить значение.",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата"
          }
        }
      },
      "EmployeeStatementSubstitutionDateRangeDetailValue": {
        "title": "SubstitutionDateRangeDetailValue",
        "type": "object",
        "description": "Подробные данные по значению диапазона дат. Может отсутствовать, если не получится распарсить значение.",
        "properties": {
          "date_from": {
            "type": "string",
            "format": "date-time",
            "description": "Дата от"
          },
          "date_to": {
            "type": "string",
            "format": "date-time",
            "description": "Дата до"
          }
        }
      },
      "EmployeeStatementSubstitutionNumberDetailValue": {
        "title": "SubstitutionNumberDetailValue",
        "type": "object",
        "description": "Подробные данные по значению числа. Может отсутствовать, если не получится распарсить значение.",
        "properties": {
          "number": {
            "type": "number",
            "description": "Число"
          }
        }
      },
      "EmployeeStatementSubstitutionStringDetailValue": {
        "title": "SubstitutionStringDetailValue",
        "type": "object",
        "description": "Подробные данные по значению текста.",
        "properties": {
          "string": {
            "type": "string",
            "description": "Строка текста"
          }
        }
      },
      "EmployeeStatementApprovalStage": {
        "type": "object",
        "description": "Этап согласования заявления",
        "properties": {
          "order": {
            "type": "integer",
            "description": "Порядковый номер, указывающий на порядок этапа согласования"
          },
          "status": {
            "required": [
              "title",
              "value"
            ],
            "type": "object",
            "description": "Статус этапа согласования заявления",
            "properties": {
              "title": {
                "type": "string",
                "description": "Название статуса"
              },
              "value": {
                "$ref": "#/components/schemas/EmployeeStatementApprovalStageStatusEnum"
              }
            }
          },
          "approvals": {
            "type": "array",
            "description": "Список согласований",
            "items": {
              "$ref": "#/components/schemas/EmployeeStatementApproval"
            }
          }
        },
        "required": [
          "order",
          "status",
          "approvals"
        ]
      },
      "EmployeeStatementApproval": {
        "type": "object",
        "description": "Согласование заявления",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД согласования"
          },
          "status": {
            "required": [
              "title",
              "value"
            ],
            "type": "object",
            "description": "Статус согласования заявления",
            "properties": {
              "title": {
                "type": "string",
                "description": "Название статуса"
              },
              "value": {
                "$ref": "#/components/schemas/EmployeeStatementApprovalStatusEnum"
              }
            }
          },
          "approver": {
            "required": [
              "id",
              "first_name",
              "last_name",
              "middle_name",
              "phone",
              "position"
            ],
            "type": "object",
            "description": "Сотрудник согласующий заявление",
            "properties": {
              "id": {
                "type": "integer",
                "description": "ИД сотрудника"
              },
              "first_name": {
                "type": "string",
                "description": "Имя сотрудника"
              },
              "last_name": {
                "type": "string",
                "description": "Фамилия сотрудника"
              },
              "middle_name": {
                "type": "string",
                "description": "Отчество сотрудника",
                "nullable": true
              },
              "phone": {
                "type": "string",
                "description": "Номер телефона сотрудника",
                "nullable": true
              },
              "position": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "description": "Должность сотрудника",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "ИД должности"
                  },
                  "name": {
                    "type": "string",
                    "description": "Название должности"
                  }
                }
              }
            }
          },
          "approver_comment": {
            "type": "string",
            "description": "Комментарий согласующего"
          }
        },
        "required": [
          "id",
          "status",
          "approver",
          "approver_comment"
        ]
      },
      "EmployeeStatementAttachment": {
        "type": "object",
        "description": "Вложение заявления",
        "properties": {
          "id": {
            "type": "string",
            "description": "ИД вложения"
          },
          "name": {
            "type": "string",
            "description": "Название файла"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "DocumentSignOrderEnum": {
        "type": "string",
        "title": "DocumentSignOrderEnum",
        "description": "Порядок подписания документа",
        "enum": [
          "arbitrary",
          "manager_first",
          "employee_first",
          "manager_only",
          "employee_only"
        ]
      },
      "DocumentStatusEnum": {
        "type": "string",
        "title": "DocumentStatusEnum",
        "description": "Статус документа",
        "enum": [
          "pending",
          "processing",
          "signed",
          "rejected",
          "partial_signed"
        ]
      },
      "SignatureStatusEnum": {
        "type": "string",
        "title": "DocumentStatusEnum",
        "description": "Статус подписи документа",
        "enum": [
          "pending",
          "processing",
          "signing",
          "signed",
          "rejected"
        ]
      },
      "SignatureProviderEnum": {
        "type": "string",
        "title": "DocumentProviderEnum",
        "description": "Провайдер подписи документа",
        "enum": [
          "simple",
          "gpg_on_client",
          "cryptopro_on_client",
          "astral_on_server"
        ]
      },
      "EmployeeStatementStatusEnum": {
        "type": "string",
        "title": "EmployeeStatementStatusEnum",
        "description": "Статус заявления",
        "enum": [
          "received",
          "signing",
          "signed",
          "approving",
          "approved",
          "rejected",
          "revoked",
          "processing",
          "completed"
        ]
      },
      "EmployeeStatementApprovalStageStatusEnum": {
        "type": "string",
        "title": "EmployeeStatementApprovalStageStatusEnum",
        "description": "Статус этапа согласования заявления",
        "enum": [
          "pending",
          "approved",
          "rejected"
        ]
      },
      "EmployeeStatementApprovalStatusEnum": {
        "type": "string",
        "title": "EmployeeStatementApprovalStatusEnum",
        "description": "Статус согласования заявления",
        "enum": [
          "pending",
          "approved",
          "rejected"
        ]
      },
      "v1.CreateUpdateProductionCalendarRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название производственного календаря",
            "maxLength": 255
          },
          "code": {
            "type": "string",
            "description": "Код производственного календаря",
            "maxLength": 255
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "v1.SyncProductionCalendarDatesRequest": {
        "type": "object",
        "properties": {
          "dates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "description": "Дата календарного дня в формате ISO 8601",
                  "example": "2024-01-17"
                },
                "kind": {
                  "$ref": "#/components/schemas/v1.ProductionDateKindEnum"
                }
              },
              "required": [
                "date",
                "kind"
              ]
            },
            "maxItems": 500
          }
        },
        "required": [
          "year",
          "dates"
        ]
      },
      "v1.ProductionDateKindEnum": {
        "type": "string",
        "enum": [
          "day_off",
          "work_day",
          "saturday",
          "sunday",
          "pre_holiday",
          "holiday"
        ],
        "description": "Вид календарного дня в производственном календаре"
      },
      "v1.ProductionCalendar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Ид производственного календаря"
          },
          "name": {
            "type": "string",
            "description": "Название производственного календаря"
          },
          "code": {
            "type": "string",
            "description": "Код производственного календаря"
          }
        },
        "required": [
          "id",
          "name",
          "code"
        ]
      }
    },
    "parameters": {
      "Device-Key": {
        "name": "Device-Key",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "1234-4321-1122-3344"
        },
        "description": "Идентификатор устройства"
      },
      "Application-Key": {
        "name": "Application-Key",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string",
          "example": "f5a1da62-ebe0-4b6b-b0f9-1483f7d62adf"
        },
        "description": "Ключ приложения"
      },
      "page": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "default": 1
        },
        "description": "Текущая страница"
      },
      "per_page": {
        "name": "per_page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "maximum": 200,
          "enum": [
            1,
            2,
            3,
            4,
            5,
            10,
            15,
            20,
            25,
            30,
            50,
            100,
            150,
            200
          ],
          "minimum": 1,
          "default": 20
        },
        "description": "Количество элементов на странице"
      },
      "employee_include": {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "workplaces"
        },
        "description": "Дополнительные данные, которые необходимо получить вместе со штатным сотрудником"
      },
      "vacation_include": {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "agent,department,position,vacation_kind"
        },
        "description": "Вывод дополнительной информации"
      },
      "candidate_include": {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "company,workplaces,status,checklist,agents,departments,positions,questionnaire,personal_data_processing_consent,requested_documents,requested_personal_data,eqes_issue_consent,eqes_issue_application"
        },
        "description": "Вывод дополнительной информации"
      },
      "questionnaire_include": {
        "name": "include",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "example": "company,candidate,status,personal_data_processing_consent,requested_documents,requested_personal_data,eqes_issue_consent,eqes_issue_application"
        },
        "description": "Вывод дополнительной информации"
      },
      "identification_request_view": {
        "name": "view",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "simple",
            "passport"
          ]
        },
        "description": "Вариант представления возвращаемых данных"
      }
    }
  }
}